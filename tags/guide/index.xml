<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>guide on Ketan Parmar (kpbird)</title>
    <link>https://kpbird.github.io/tags/guide/</link>
    <description>Recent content in guide on Ketan Parmar (kpbird)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; 2020. All rights reserved.</copyright>
    <lastBuildDate>Tue, 09 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kpbird.github.io/tags/guide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gRPC - TL;DR</title>
      <link>https://kpbird.github.io/post/2021-02-09-grpc-tldr/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2021-02-09-grpc-tldr/</guid>
      <description>gRPC TL;DR 
 gRPC system initially developed at Google in 2015 for internal use. It is open-sourced in 2016. gRPC is an open-source remote procedure call (RPC) framework. gRPC is used for a server to server or client to server communication. gRPC is preferred when you need low latency, highly scalable and distributed system. Most common use case of gRPC is to communication between microservices. It can also use in mobile and desktop application to communicate with Server.</description>
    </item>
    
    <item>
      <title>ProtocolBuffers - TL;DR</title>
      <link>https://kpbird.github.io/post/2021-02-02-protocolbuffers-tldr/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2021-02-02-protocolbuffers-tldr/</guid>
      <description>ProtocolBuffer TL;DR 
 Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data. Protocol buffers are also known as protobuf Protocol buffers are developed by Google for internal use. It is available for the public in 2008. Protobuf is binary serialize protocol, unlike JSON and XML which are text-based human-readable protocol. It’s non-human-readable because of binary serialize. Apache Thrift, Ion, Fast Buffers, FlatBuffers, Cap’n Proto, SBE (Simple Binary Encoding) are some of the alternatives of Protocol Buffers.</description>
    </item>
    
    <item>
      <title>GraphQL - TL;DR</title>
      <link>https://kpbird.github.io/post/2021-01-22-graphql-tldr/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2021-01-22-graphql-tldr/</guid>
      <description>GraphQL — TL;DR 
 Facebook develops GraphQL in 2015. On 7 November 2018, the GraphQL project was moved from Facebook to the newly-established GraphQL Foundation. Lee Byron https://leebyron.com/ is co-creator of GraphQL at Facebook GraphQL is a data query and manipulation language for APIs. It can be alternative to REST API or co-exist with REST API GraphQL is not a query language of GraphDB but you can use GraphDB with GraphQL.</description>
    </item>
    
    <item>
      <title>NoSQL- A quick guide</title>
      <link>https://kpbird.github.io/post/2015-08-27_nosql-a-quick-guide-2156c1bfcdc8/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2015-08-27_nosql-a-quick-guide-2156c1bfcdc8/</guid>
      <description>NoSQL is buzz word now-a-days among the developers and software professionals.
What is NoSQL? NoSQL database, also called Not Only SQL, is an approach to data management and database design that&amp;rsquo;s useful for very large sets of distributed data.
Where to use NoSQL ? Use NoSQL, When project has unstructured big data that require real-time or offline analysis or web/mobile application. i.e. Social Network app, Analytics app.
Advantages and Disadvantages of NoSQL DB.</description>
    </item>
    
    <item>
      <title>Migrate Web Site to AWS Cloud --- A Quick Guide</title>
      <link>https://kpbird.github.io/post/2014-07-05_migrating-web-site-to-aws-cloud-a-quick-guide-7576d2aae4e5/</link>
      <pubDate>Sat, 05 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2014-07-05_migrating-web-site-to-aws-cloud-a-quick-guide-7576d2aae4e5/</guid>
      <description>Migrate Website to AWS Cloud This is a quick tip to migrate your existing website to AWS Cloud. I assume that you have basic knowledge of AWS Cloud and server side architecture. This post does not include a discussion of pros and cons of AWS or Cloud services. Elasticity and Auto-Scaling are two main features of Cloud. If we don&amp;rsquo;t leverage these feature then there isn&amp;rsquo;t any difference between hosting website in dedicate server or AWS Cloud.</description>
    </item>
    
    <item>
      <title>Microservice Architecture: A Quick Guide</title>
      <link>https://kpbird.github.io/post/2014-06-20_microservice-architecture-a-quick-guide-3990785350fc/</link>
      <pubDate>Fri, 20 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kpbird.github.io/post/2014-06-20_microservice-architecture-a-quick-guide-3990785350fc/</guid>
      <description>What is Architecture (Software)? Architecture is the fundamental organization of a system embodied in its components (i.e. Web Server, Application Server, Databases,Storage, Communication layer, etc&amp;hellip;), their relationships to each other, and to the environment (i.e. deployment environment shared server, dedicated server, cloud deployment, etc..), and the principles guiding its design and evolution.
What is microservice architecture ? Microservice means developing a single, small, meaningful functional feature as single service, each service has it&amp;rsquo;s own process and communicate with lightweight mechanism, deployed in single or multiple servers.</description>
    </item>
    
  </channel>
</rss>
