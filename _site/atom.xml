<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Ketan Parmar</title>
 <link type="application/atom+xml" href="http://romuluscrisan.com/atom.xml" rel="self"/>
 <link href="http://www.romuluscrisan.com/"/>
 <updated>2015-07-07T23:00:41+05:30</updated>
 <id>http://www.kpbird.com/</id>
 <author>
   <name>Ketan Parmar</name>
   <email>contact@kpbird.com</email>
 </author>
 
 
 <entry>
   <title>Go Language For Java Developer Part-5</title>
   <link href="http://www.romuluscrisan.com/2015/07/Go-Language-For-Java-Developer-Part-5"/>
   <updated>2015-07-04T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/07/Go-Language-For-Java-Developer-Part-5</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/golang.jpeg&quot; alt=&quot;Go Language For Java Developer&quot; title=&quot;Go Language For Java Developer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Previous article of the Go series&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-1/&quot;&gt;Part-1 : Introduction of Go Language &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-2/&quot;&gt;Part-2 : Hello Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-3/&quot;&gt;Part-3 : Data Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-4/&quot;&gt;Part-4: Keywords is Go Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;variables&quot;&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Variable: A variable is a storage location for holding a value. The set of permissible values is determined by the variable&amp;#39;s type.&lt;/p&gt;

&lt;h4 id=&quot;java-variable&quot;&gt;Java Variable&lt;/h4&gt;

&lt;p&gt;Java language has primitive type and objects, both have different syntax to declare a variable&lt;/p&gt;

&lt;p&gt;Primitive type variable&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;int a
String b
float c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Object type variable&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Animal a = new Animal()
Student s = new Student()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Java is object oriented language so that we can have access modifier for variable declaration&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private int a
public String b
protected float c
private Animal a 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Java we can declare variable at many places like Local variable, Parameters, Class level, Instance variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variable Naming&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Variable names are case-sensitive&lt;/li&gt;
&lt;li&gt;An unlimited-length sequence of Unicode letters and digits&lt;/li&gt;
&lt;li&gt;Beginning with a letter, the dollar sign &amp;quot;$&amp;quot;, or the underscore character &amp;quot;_&amp;quot;.&lt;/li&gt;
&lt;li&gt;No special characters allowd as identifier of variable&lt;/li&gt;
&lt;li&gt;We can&amp;#39;t use reserved keywords&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;go-variable&quot;&gt;Go Variable&lt;/h4&gt;

&lt;p&gt;Variables in Go are created by first using the &lt;em&gt;&amp;#39;var&amp;#39;&lt;/em&gt; keyword, then specifying the variable name, the type and finally assigning a value to the variable.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package main
import &amp;quot;fmt&amp;quot;
func main() {
    var x int  // Line 1
    x = 10 // Line 2
    var y string = &amp;quot;Hello Go!&amp;quot; // Line 3
    fmt.Println(x)
    fmt.Println(y)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Line 1, var indicate it&amp;#39;s variable, x is name of variable and int is type of variable. 
In Line 2, we are assigning value in x variable. 
In Line 3, we have declare string variable and assign in single line&lt;/p&gt;

&lt;p&gt;Since creating a new variable with a starting value is so common Go also supports a shorter statement:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;y := &amp;quot;Hello Go!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With above shorter syntax Go compiler will automatically identify that y is variable of type string and value is &amp;quot;Hello Go!&amp;quot;.&lt;/p&gt;

&lt;p&gt;Declare multiple variable at same time&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var (
    name string
    age int
    location string
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go is not object oriented language so we don&amp;#39;t have access modifier like we have in Java. In Go language, We have two place to declare variables 1. Inside Function 2. Out Side Function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function / Local Variable&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package main
import &amp;quot;fmt&amp;quot;
func main(){
    var x int = 10  
    fmt.Println(x)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Global Variable&lt;/strong&gt;: Any function can access y variable, x is local variable only accessible inside main function&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package main
import &amp;quot;fmt&amp;quot;
var y int =10
func main(){
    var x int = 10
    fmt.Println(x)
    fmt.Println(y)
}
func hello(){
    fmt.Println(y)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Variable Name&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Name must be start with letter&lt;/li&gt;
&lt;li&gt;Name may contain letter, number and underscore (_)&lt;/li&gt;
&lt;li&gt;Name is character sensetive Num and num consider as two different variable&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Go Language For Java Developer Part-4</title>
   <link href="http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-4"/>
   <updated>2015-06-27T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-4</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/golang.jpeg&quot; alt=&quot;Go Language For Java Developer&quot; title=&quot;Go Language For Java Developer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Previous article of the Go series&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-1/&quot;&gt;Part-1 : Introduction of Go Language &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-2/&quot;&gt;Part-2 : Hello Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kpbird.com/2015/06/Go-Language-For-Java-Developer-Part-3/&quot;&gt;Part-3 : Data Type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;keywords&quot;&gt;&lt;strong&gt;Keywords&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Following keywords are reserved and may not be used as identifiers.&lt;/p&gt;

&lt;h4 id=&quot;java-language-keywords&quot;&gt;Java Language Keywords&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abstract&lt;/td&gt;
&lt;td&gt;continue&lt;/td&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td&gt;new&lt;/td&gt;
&lt;td&gt;switch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assert&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;goto&lt;/td&gt;
&lt;td&gt;package&lt;/td&gt;
&lt;td&gt;synchronized&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;do&lt;/td&gt;
&lt;td&gt;if&lt;/td&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;this&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;break&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;implements&lt;/td&gt;
&lt;td&gt;protected&lt;/td&gt;
&lt;td&gt;throw&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td&gt;else&lt;/td&gt;
&lt;td&gt;import&lt;/td&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;throws&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;case&lt;/td&gt;
&lt;td&gt;enum&lt;/td&gt;
&lt;td&gt;instanceof&lt;/td&gt;
&lt;td&gt;return&lt;/td&gt;
&lt;td&gt;transient&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;catch&lt;/td&gt;
&lt;td&gt;extends&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;try&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;final&lt;/td&gt;
&lt;td&gt;interface&lt;/td&gt;
&lt;td&gt;static&lt;/td&gt;
&lt;td&gt;void&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class&lt;/td&gt;
&lt;td&gt;finally&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;strictfp&lt;/td&gt;
&lt;td&gt;volatile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;const&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;td&gt;super&lt;/td&gt;
&lt;td&gt;while&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&quot;go-language-keywords&quot;&gt;Go Language Keywords&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;table &gt;
  &lt;tr&gt;
    &lt;td &gt;break&lt;/td&gt;
    &lt;td &gt;default&lt;/td&gt;
    &lt;td &gt;func&lt;/td&gt;
    &lt;td &gt;interface&lt;/td&gt;
    &lt;td &gt;select&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td &gt;case&lt;/td&gt;
    &lt;td &gt;defer&lt;/td&gt;
    &lt;td &gt;go&lt;/td&gt;
    &lt;td &gt;map&lt;/td&gt;
    &lt;td &gt;struct&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td &gt;chan&lt;/td&gt;
    &lt;td &gt;else&lt;/td&gt;
    &lt;td &gt;goto&lt;/td&gt;
    &lt;td &gt;package&lt;/td&gt;
    &lt;td &gt;switch&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td &gt;const&lt;/td&gt;
    &lt;td &gt;fallthrough&lt;/td&gt;
    &lt;td &gt;if&lt;/td&gt;
    &lt;td &gt;range&lt;/td&gt;
    &lt;td &gt;type&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td &gt;continue&lt;/td&gt;
    &lt;td &gt;for&lt;/td&gt;
    &lt;td &gt;import&lt;/td&gt;
    &lt;td &gt;return&lt;/td&gt;
    &lt;td &gt;var&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;There are few obvious keywords like break, case, if, for, etc but few keywords are new in Go Language.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;func: To declare function&lt;/li&gt;
&lt;li&gt;interface: To declare interface (It&amp;#39;s different than Java&amp;#39;s interface)&lt;/li&gt;
&lt;li&gt;defer: something like finalise method in Java&lt;/li&gt;
&lt;li&gt;go: To create thread&lt;/li&gt;
&lt;li&gt;chan: To do synchronised between threads&lt;/li&gt;
&lt;li&gt;var: To declare variable&lt;/li&gt;
&lt;li&gt;range: It&amp;#39;s like iterator in Java&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Android App Review: First Run C25K Fitness Trainer</title>
   <link href="http://www.romuluscrisan.com/2015/06/Android-App-Review-First-Run-C25K-Fitness-Trainer"/>
   <updated>2015-06-21T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Android-App-Review-First-Run-C25K-Fitness-Trainer</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;design-review&quot;&gt;Design Review&lt;/h3&gt;

&lt;p&gt;First Run application design don&amp;#39;t have &amp;#39;Wow&amp;#39; factor but it&amp;#39;s also not ugly. You will find inconsistency in many screens. At first, the application will impress you with splash screen and login / signup screen. Sign In / Signup screen&amp;#39;s design looks perfect with social login options as well as manual signup and sign in options. You can also use this application without Sign In / Sign Up. &lt;/p&gt;

&lt;p&gt;Here is my observation for the design &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun1.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;This screen is part of application. Yes, Entire screen without design. When user select Music folder this screen appear. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun2.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Sign Up or Sign In screen. Looks perfect. Application logo and background image are placed perfectly. Nice design to provide Social and manual login options. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun3.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Sign Up Dialog. When I looked at this screen first time, I had a question in my mind, Why EditText are rounded corner and Button with square corner? Both looks very odd. When dialog appear cursor blink to Email EditText but keyboard is not visible. Generally, when cursor blinks keyboard should be visible. The height of EditText is larger than button&amp;#39;s height. It gives feeling like button is squeezed.&lt;/p&gt;

&lt;p&gt;When you click on Sign Up without typing anything, Application display message &amp;quot;Invalid Email ID&amp;quot; in toast. Message text and the way it is displayed, is not professional. There isn&amp;#39;t any visual indication for wrong data (email or password). Application displays only Toast messages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun4.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Sign In screen. When you click on Sign Up button, Application will open dialog on same screen but when you click on Sign In button, Application will open new screen / activity without background image. Which gives feeling inconsistency. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun5.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;When user selects program, above screen appear. &amp;quot;Prepare your run...&amp;quot; message is not vertically centre. Entire screen is blank except this message. It looks ugly. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun6.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;You can easily recognise that the content display, inside WebView. 1) Back arrow is non standard. 2) Running form label and the arrow image is not properly align. This screens can be improved a lot. There can be three steps wizard with nice designs. Caption text below video can justify.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun7.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Inconsistency, Few screen has action bar back button and few screen don&amp;#39;t have. Actionbar Title and Sub title is in italic. Point 2 in image, thickness and cap between lines are different. Point 3 player control is too small.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&quot;performance-review&quot;&gt;Performance Review&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun8.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is GPU Overdraw benchmark, It&amp;#39;s good that only centre section is red. Read this link for more information about GPU Overdraw &lt;a href=&quot;https://developer.android.com/tools/performance/debug-gpu-overdraw/index.html&quot;&gt;https://developer.android.com/tools/performance/debug-gpu-overdraw/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun9.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Profile GPU Rendering gives you a quick visual representation of how much time it takes to render the frames of a UI window relative to the 16-ms-per-frame benchmark. Above image has issue in few frame rendering. Read this link for more information &lt;a href=&quot;https://developer.android.com/tools/performance/profile-gpu-rendering/index.html&quot;&gt;https://developer.android.com/tools/performance/profile-gpu-rendering/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&quot;memory-profile&quot;&gt;Memory Profile&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun10.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;This application is memory hungry, Above screen shot illustrate memory allocation of the application on start. 58 MB Heap Size and 42 MB allocation is huge. Application may have issue with lower end devices. 33 MB is allocated as 1-byte array. It might happen that application persist high resolution images in memory.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&quot;security&quot;&gt;Security&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Security is always major flow in Android application. In this application there are many security flows ranging from minor to serious.&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&quot;library,-framework-&amp;amp;-services&quot;&gt;Library, Framework &amp;amp; Services&lt;/h3&gt;

&lt;p&gt;Following libraries, frameworks and services are integrated in the application.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;AChart Engine - &lt;a href=&quot;http://www.achartengine.org/&quot;&gt;http://www.achartengine.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Amazon AWS - &lt;a href=&quot;http://aws.amazon.com/mobile/sdk/&quot;&gt;http://aws.amazon.com/mobile/sdk/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AppVirality - &lt;a href=&quot;https://www.appvirality.com/&quot;&gt;https://www.appvirality.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook SDK - &lt;a href=&quot;https://developers.facebook.com/docs/android/&quot;&gt;https://developers.facebook.com/docs/android/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flurry - &lt;a href=&quot;https://developer.yahoo.com/flurry/&quot;&gt;https://developer.yahoo.com/flurry/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mint Splunk -  &lt;a href=&quot;https://mint.splunk.com/&quot;&gt;https://mint.splunk.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter4j - &lt;a href=&quot;http://twitter4j.org/en/index.html&quot;&gt;http://twitter4j.org/en/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bolts-Android  - &lt;a href=&quot;https://github.com/BoltsFramework/Bolts-Android&quot;&gt;https://github.com/BoltsFramework/Bolts-Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google Analytics - &lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/android/v4/&quot;&gt;https://developers.google.com/analytics/devguides/collection/android/v4/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&quot;android-manifest-statics&quot;&gt;Android Manifest Statics&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Package Name: com.firstrun.prototyze&lt;/li&gt;
&lt;li&gt;Version Code: 21&lt;/li&gt;
&lt;li&gt;Version Name: 5.0.1-1624448&lt;/li&gt;
&lt;li&gt;Support Screen: Any&lt;/li&gt;
&lt;li&gt;GCM: Yes&lt;/li&gt;
&lt;li&gt;User Permission: 17&lt;/li&gt;
&lt;li&gt;Activity: 23&lt;/li&gt;
&lt;li&gt;Receiver: 6&lt;/li&gt;
&lt;li&gt;Service: 3&lt;/li&gt;
&lt;li&gt;Meta Data: 5&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;  &lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;p&gt;Overall I would say it&amp;#39;s an average application from technical perspective. Wow factor is missing in Design. Performance is good, Security need drastic improvement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/firstrun/firstrun11.png&quot; alt=&quot;Android App Review: First Run C25K Fitness Trainer&quot; title=&quot;Android App Review: First Run C25K Fitness Trainer&quot; class=&quot;img-responsive&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h4&gt;

&lt;p&gt;The information provided in this article is purely for knowledge sharing purpose. No intension to favour or harm reputation of the application. Insight information of application is provided for knowledge sharing and learning purpose. Owner of the blog don&amp;#39;t have any responsibility of how, when and what purpose reader use this information. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Go Language For Java Developer Part-3</title>
   <link href="http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-3"/>
   <updated>2015-06-20T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-3</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/golang.jpeg&quot; alt=&quot;Go Language For Java Developer&quot; title=&quot;Go Language For Java Developer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;java-language:-data-type&quot;&gt;&lt;strong&gt;Java Language: Data Type&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;In Java, We have premitive data types and objects. Java support 8 premitive data types for different purpose. &lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Data Type&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;0L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;0.0f&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;0.0d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;&amp;#39;\u0000&amp;#39;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;Reference: &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html&quot;&gt;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;go-language:-type&quot;&gt;&lt;strong&gt;Go Language: Type&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Go language is statically typed programming language. It means that variable always has specific type that can&amp;#39;t be changed. Go language data type can be divided in main three categories. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Boolean: A boolean type represents the set of Boolean truth values denoted by the predeclared constants true and false. The predeclared boolean type is bool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Numeric: A numeric type represents sets of integer or floating-point values. The predeclared architecture-independent numeric types are: int, float32, float64, etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String: A string type represents the set of string values. A string value is a (possibly empty) sequence of bytes. Strings are immutable: once created, it is impossible to change the contents of a string. The predeclared string type is string.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;th id=&quot;h1&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Data Type&lt;/strong&gt;&lt;/th&gt;
        &lt;th id=&quot;h2&quot; align=&quot;left&quot;&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt;
        &lt;th&gt;Range&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;bool&lt;/td&gt;
        &lt;td &gt;false&lt;/td&gt;
        &lt;td&gt;true or false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;int&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;either int32 or int64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;int8&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;signed 16-bit integers (-32768 to 32767)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;int16&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;signed 16-bit integers (-32768 to 32767)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;int32&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;signed 32-bit integers (-2147483648 to 2147483647)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;int64&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;signed 64-bit integers (-9223372036854775808 to 9223372036854775807)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;uint&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;either 32 or 64 bits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;uint8&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;unsigned  8-bit integers (0 to 255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;uint16&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;unsigned 16-bit integers (0 to 65535)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;uint32&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;unsigned 32-bit integers (0 to 4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;uint64&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;unsigned 64-bit integers (0 to 18446744073709551615)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td &gt;float32&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;IEEE-754 32-bit floating-point numbers&lt;/td&gt;
    &lt;/tr&gt;                                       
    &lt;tr&gt;
        &lt;td &gt;float64&lt;/td&gt;
        &lt;td &gt;0&lt;/td&gt;
        &lt;td&gt;IEEE-754 64-bit floating-point numbers&lt;/td&gt;
    &lt;/tr&gt;                                       
    &lt;tr&gt;
        &lt;td &gt;string&lt;/td&gt;
        &lt;td &gt;&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;                                       
&lt;/table&gt;

&lt;p&gt;Refernce: &lt;a href=&quot;https://golang.org/ref/spec#Types&quot;&gt;https://golang.org/ref/spec#Types&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next article we will larn about variable in Go Language&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Go Language For Java Developer Part-2</title>
   <link href="http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-2"/>
   <updated>2015-06-13T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-2</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/golang.jpeg&quot; alt=&quot;Go Language For Java Developer&quot; title=&quot;Go Language For Java Developer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Normally first program you write in any programming language is &amp;quot;Hello World&amp;quot;. Hello World is simple program which print &amp;quot;Hello Word&amp;quot; text on console / screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Java: Hello World&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As Java Developer you can easily understand following code. No need to explain. correct ? &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.gotutorial; 
public class Main {
    public static void main(String[] args) {
        System.out.println(&amp;quot;Hello World&amp;quot;);        
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To compile &amp;amp; execute above code, you need to write following two commands in the Terminal. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;javac Main.java
java Main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Go: Hello World&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create directory where you need to keep the code. Create file named &amp;quot;main.go&amp;quot; and write following code&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package main  // line 1
import &amp;quot;fmt&amp;quot; // line 2
func main() { // line 3
    fmt.Println(&amp;quot;Hello World&amp;quot;) // line 4
} // line 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To execute above code, you need to write following command in the Terminal&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should see Hello World in terminal. If you don&amp;#39;t see Hello World displayed then you may have mistake in typing program. The Go compiler will give you hint about where the mistake lies. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understand Go : Hello Word program&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Package Name (Line 1):&lt;/strong&gt; Go program start with package declaration. Every Go program must start with package declaration. Package declaration is used to organise source code. In Java we follow relative path but with &amp;quot;.&amp;quot; (dot) format like com.kpbird.gotutorial represent physical path com/kpbird/gotutorial. While in Go language package name represent only current folder name &amp;quot;gotutorial&amp;quot;. Go language support two type of program 1. Go Libraries 2. Go Executable. Package main is a way to tell compiler that this Go program is executable. When you declare &amp;quot;package main&amp;quot; you don&amp;#39;t need to create folder / directory called &amp;quot;main&amp;quot;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Import (Line 2):&lt;/strong&gt;  import keyword is used to include code from other package or library. The &amp;quot;fmt&amp;quot; package is short form of Format. It is used to format input and output. In Java, we don&amp;#39;t need to write java.lang package explicitly compiler will do it behalf of us.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. fund main() (Line 3):&lt;/strong&gt; Functions are building block of Go language. All functions start with keywords &amp;quot;func&amp;quot;. func followed by name of function in our case &amp;quot;main&amp;quot; is the name of function. If function takes any argument we need to write in parentheses. Main is special function because main gets called when we execute Go program. It&amp;#39;s like public static void main() in Java.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. fmt.Println (Line 4):&lt;/strong&gt; Line 4 has three component 1. fmt package name. 2. Println function name 3. String argument &amp;quot;Hello World&amp;quot;. In Java, we use System.out.println().&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Java vs Go&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We should not compare both languages because both are different. Go Language is functional features language in which functions are first-class citizen. Java Language is Object Oriented language in which Class / Object are first-class citizen.&lt;/p&gt;

&lt;p&gt;To execute Java program, first we need to compile using &amp;quot;javac&amp;quot; command, after that we need to use &amp;quot;java&amp;quot; command execute a program. &lt;/p&gt;

&lt;p&gt;To execute Go program, we just need to write Go run main.go. Single command will compile and execute program. To build program Go language has command build. It will generate native executable file as per the platform, that you can directly execute. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$Go build main.go
$./main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Go Language don&amp;#39;t have semi-colon (;) to end the statement. It means that you can&amp;#39;t write two statement in single line.&lt;/p&gt;

&lt;p&gt;In Java Language, As we have semi-colon (;) to end the statement we can write entire code in single line.&lt;/p&gt;

&lt;p&gt;Next article we will learn about data types in Go Language.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Go Language For Java Developer Part-1</title>
   <link href="http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-1"/>
   <updated>2015-06-06T05:30:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Go-Language-For-Java-Developer-Part-1</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/golang.jpeg&quot; alt=&quot;Go Language For Java Developer&quot; title=&quot;Go Language For Java Developer&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Go language is normally known as golang. It&amp;#39;s general purpose programming language developed at Google in 2007 by three Google employees namely Robert Griesemer, Rob Pike, and Ken Thompson. In November 2008 Google had announced Go Language to public and made it &lt;a href=&quot;https://go.googlesource.com/go&quot;&gt;open source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go language compiler is available for the Linux, Mac OS X, FreeBSD, NetBSD, OpenBSD, Plan 9, and Microsoft Windows operating systems and the i386, amd64, ARM and IBM POWER processor architectures.&lt;/p&gt;

&lt;p&gt;Beginner Go language developer should visit following links.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org/&quot;&gt;Go Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://go.googlesource.com/go&quot;&gt;Go Language Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org/doc/faq#What_is_the_purpose_of_the_project&quot;&gt;Go Language FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://plus.google.com/communities/114112804251407510571&quot;&gt;Go Google+ Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://go-lang.cat-v.org/&quot;&gt;Go Language Resource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.golangpatterns.info/&quot;&gt;Go Language Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://golangweekly.com/&quot;&gt;Go Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yager.io/programming/go.html&quot;&gt;Why Go is not good?&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you are reading this article, It means I can assume that you know about Go Language and it&amp;#39;s advantage and shortcoming. As the title suggest it&amp;#39;s for Java developers, so I can also assume that you have knowledge of core Java. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install Go Language&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download installer binary / package / installer as per your OS &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org/dl/&quot;&gt;https://golang.org/dl/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Current version is go 1.4.2&lt;/li&gt;
&lt;li&gt;Run package to install Go language&lt;/li&gt;
&lt;li&gt;After setup completes, you need to set environment variable to go language&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In case of OX, Add /usr/local/go/bin to the PATH environment variable. You can do this by    adding this line to your /etc/profile (for a system-wide installation) or   $HOME/.bash_profile:&lt;/p&gt;

&lt;p&gt;export PATH=$PATH:/usr/local/go/bin&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To verify installation, you can execute following command&lt;/p&gt;

&lt;p&gt;$go version
go version go1.4.2 darwin/amd64&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Go Language IDE&lt;/strong&gt;
Officially, Go Language don&amp;#39;t have any IDE but there are many open source 3rd party IDEs / Plugins are available. If you are familiar with IntelliJ or Eclipse then you can install plug-in for Go Language. For more details, please visit following link
&lt;a href=&quot;http://geekmonkey.org/articles/20-comparison-of-ides-for-google-go&quot;&gt;http://geekmonkey.org/articles/20-comparison-of-ides-for-google-go&lt;/a&gt;    &lt;/p&gt;

&lt;p&gt;Now, you have enough details to jump start coding. In next article I will cover fundamentals and syntax of Go Language.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android M API Changes</title>
   <link href="http://www.romuluscrisan.com/2015/06/Android-M-Preview-API-Changes"/>
   <updated>2015-06-06T05:30:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/06/Android-M-Preview-API-Changes</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/androidm.png&quot; alt=&quot;Android M API Changes&quot; title=&quot;Andoid M API Changes&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Andorid M Preview Features&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App Linking&lt;/li&gt;
&lt;li&gt;Auto Backup for Apps&lt;/li&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Fingerprint Authentication&lt;/li&gt;
&lt;li&gt;Direct Share&lt;/li&gt;
&lt;li&gt;Voice Interactions&lt;/li&gt;
&lt;li&gt;Assist API&lt;/li&gt;
&lt;li&gt;Notifications&lt;/li&gt;
&lt;li&gt;Bluetooth Stylus Support&lt;/li&gt;
&lt;li&gt;Improved Bluetooth Low Energy Scanning&lt;/li&gt;
&lt;li&gt;Hotspot 2.0 Release 1 Support&lt;/li&gt;
&lt;li&gt;4K Display Mode&lt;/li&gt;
&lt;li&gt;Themeable ColorStateLists&lt;/li&gt;
&lt;li&gt;Audio Features&lt;/li&gt;
&lt;li&gt;Video Features&lt;/li&gt;
&lt;li&gt;Camera Features&lt;/li&gt;
&lt;li&gt;Flashlight API&lt;/li&gt;
&lt;li&gt;Reprocessing API&lt;/li&gt;
&lt;li&gt;Android for Work Features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The overall difference between API Levels 22 and mnc-preview-1 is approximately &lt;strong&gt;11.82%.&lt;/strong&gt; &lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
  &lt;th&gt;Type&lt;/th&gt;
  &lt;th align=&quot;center&quot;&gt;&lt;b&gt;Additions&lt;/b&gt;&lt;/th&gt;
  &lt;th align=&quot;center&quot;&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/th&gt;
  &lt;th align=&quot;center&quot;&gt;Removals&lt;/th&gt;
  &lt;th align=&quot;center&quot;&gt;&lt;b&gt;Total&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Packages&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;4&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;52&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;84&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Classes and &lt;i&gt;Interfaces&lt;/i&gt;&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;121&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;236&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;27&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Constructors&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;3&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;0&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Methods&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;510&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;123&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;28&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;661&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;Fields&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;403&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;81&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;39&lt;/td&gt;
  &lt;td align=&quot;right&quot;&gt;523&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td style=&quot;background-color:#FAFAFA&quot;&gt;&lt;b&gt;Total&lt;/b&gt;&lt;/td&gt;
  &lt;td style=&quot;background-color:#FAFAFA&quot; align=&quot;right&quot;&gt;&lt;strong&gt;1041&lt;/strong&gt;&lt;/td&gt;
  &lt;td style=&quot;background-color:#FAFAFA&quot; align=&quot;right&quot;&gt;&lt;strong&gt;492&lt;/strong&gt;&lt;/td&gt;
  &lt;td style=&quot;background-color:#FAFAFA&quot; align=&quot;right&quot;&gt;&lt;strong&gt;124&lt;/strong&gt;&lt;/td&gt;
  &lt;td style=&quot;background-color:#FAFAFA&quot; align=&quot;right&quot;&gt;&lt;strong&gt;1657&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Reference: &lt;a href=&quot;http://developer.android.com/preview/index.html&quot;&gt;http://developer.android.com/preview/index.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Simple SyncAdapter</title>
   <link href="http://www.romuluscrisan.com/2015/04/Android-Simple-SyncAdapter-Example"/>
   <updated>2015-04-26T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2015/04/Android-Simple-SyncAdapter-Example</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;/assets/images/posts/SyncAdapter_large.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/images/posts/SyncAdapter_small.png&quot; alt=&quot;Android SyncAdapter&quot; title=&quot;Android SyncAdapter&quot; class=&quot;img-responsive&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SyncAdapter is standard and preferred way to sync application data with server, cloud or MBaaS backend. SyncAdapter is the most efficient way to make your application update to date. It will help you to present fresh data when user open application. You can increase user experience by not making wait to user till you call web service and fetch the data. Almost all popular android application use SyncAdapter, you check from Setting -&amp;gt; Account, you will find accounts i.e. google, twitter, facebook, etc.. It means these application use SyncAdapter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why SyncAdapter?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As Lazy developer you might think why should I put an effort to write SyncAdapter. SyncAdapter is complex!!, I can directly make network call when required, and more... &lt;/p&gt;

&lt;p&gt;Let’s compare custom sync with SyncAdapter&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Custom Sync&lt;/th&gt;
&lt;th&gt;Sync Adapter&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Network Availability - manually&lt;/td&gt;
&lt;td&gt;Network Availability - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pending Queue - manually&lt;/td&gt;
&lt;td&gt;Pending Queue - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Refresh on Network - manually&lt;/td&gt;
&lt;td&gt;Refresh on Network - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Periodic Update - manually&lt;/td&gt;
&lt;td&gt;Periodic Update - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sync Setting - manually&lt;/td&gt;
&lt;td&gt;Sync Setting - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Bandwidth - manually&lt;/td&gt;
&lt;td&gt;Network Bandwidth - Automatically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Battery Efficient - ?? Depend on you&lt;/td&gt;
&lt;td&gt;Battery Efficient - Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;And many more&lt;/td&gt;
&lt;td&gt;And many more&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;I hope above table is sufficient to convince to create sync adapter demo. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concepts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Concepts are very important to read before jump to the demo. Many developer don’t read API document or understand concept and directly start sample and try to learn from it but I suggest to read concept first before open your IDE and read the code. SyncAdapter has mainly two section 1. Account management 2. Sync Adapter. If your app requires user credentials or server login, you can optionally integrate account management and authentication into your data transfer.&lt;/p&gt;

&lt;p&gt;SyncAdapter has following sections.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Sqlite Database:&lt;/strong&gt; I guess you all are master of Sqlite database, SyncAdapter will store data in Sqlite using Content Provider. You may choose other options as well. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content Provider:&lt;/strong&gt;  Act as bridge between your database and SyncAdapter. To expose your data in Rest like URL pattern.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AbstractAccountAuthenticator:&lt;/strong&gt; As developer we need to extend this class and override methods, It is primarily used to manage authentication and account management. To use SyncAdapter you must have custom account. This class is responsible to create account, maintain auth token and various things related to authentication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator Service:&lt;/strong&gt; This is normal Service, which we are using daily. The only difference is that this service create object of AbstractAccountAuthenticator class and bind.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AbstractThreadedSyncAdapter:&lt;/strong&gt; As developer we need to extend this class and override methods. . This is the main piece of SyncAdapter puzzle. It has method onPerformSync, in which we need to write our code.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sync Service:&lt;/strong&gt; This is normal Service. It use to create object of AbstractThreadedSyncAdapter class and bind.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authenticator.xml:&lt;/strong&gt; You need to create this file under res/xml/ folder. This file is required to bind your authenticator component into the sync adapter and account frameworks, you need to provide these framework with metadata that describes the component. You can choose your own file name. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SyncAdapter.xml:&lt;/strong&gt; You need to create this file under res/xml/ folder.  The metadata specifies the account type you&amp;#39;ve created for your sync adapter, declares a content provider authority associated with your app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AndroidManifast.xml:&lt;/strong&gt; You must register Sync Service, Authenticator service and few other things in AndroidManifast file in order to work SyncAdapter, This is the final piece of puzzle.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Diagram&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following diagram depicted relationship between all different components of Sync Adapter. Account Manager and Sync Manager are provided by Android OS, except these two thing everything else you need to implement.
&lt;a href=&quot;/assets/images/posts/SyncAdapter_large.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/images/posts/SyncAdapter_small.png&quot; alt=&quot;Android SyncAdapter&quot; title=&quot;Android SyncAdapter&quot; class=&quot;img-responsive&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding - Let’s jump to the code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I am taking simple example ToDo list sync with Parse.com (Parse is BaaS service, If you want to know more about BaaS or MBaaS Service, please refer this article). &lt;/p&gt;

&lt;p&gt;You will find many sync adapter example with “AccountAuthenticatorActivity”, In this situation you need to develop your login screen by extending “AccountAuthenticatorActivity”, but this might not be case in every project. In few situation you might want to use sync adapter without login / registration. In this demo I will explain how to create ToDo list with Parse.com as backend and without login / registration. &lt;/p&gt;

&lt;p&gt;When user start application, It will fetch primary Gmail account and create Parse User through coding. For simplicity I will sync ToDo list only single direction, from Parse.com to local, you can have bi-directional sync based on need. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open Android Studio&lt;/li&gt;
&lt;li&gt;Create Project Name “SimpleSyncAdapter”

&lt;ul&gt;
&lt;li&gt;Minimum SDK: 4.0&lt;/li&gt;
&lt;li&gt;Package Name: com.kpbird.simplesyncadapter&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Create Blank Activity&lt;/li&gt;
&lt;li&gt;Download Parse Android SDK (&lt;a href=&quot;https://parse.com/docs/downloads&quot;&gt;https://parse.com/docs/downloads&lt;/a&gt;), Copy Parse.jar in lib folder and click “Sync Project with Gradle File” button in toolbar.&lt;/li&gt;
&lt;li&gt;We will create following files&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Sr&lt;/th&gt;
    &lt;th&gt;File&lt;/th&gt;
    &lt;th&gt;Purpose&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;1&lt;/td&gt;
    &lt;td&gt;SimpleAuthenticator.java&lt;/td&gt;
    &lt;td&gt;This class will hold authentication related information&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;2&lt;/td&gt;
    &lt;td&gt;SimpleAuthenticatorService.java&lt;/td&gt;
    &lt;td&gt;This class will provide object of SimpleAuthenticator class &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;3&lt;/td&gt;
    &lt;td&gt;SimpleContentProvider.java&lt;/td&gt;
    &lt;td&gt;This class is responsible for database operation&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;4&lt;/td&gt;
    &lt;td&gt;SimpleInit.java&lt;/td&gt;
    &lt;td&gt;This will initialize Parse library and fetch default Gmail account&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;5&lt;/td&gt;
    &lt;td&gt;SimpleSyncAdapter.java&lt;/td&gt;
    &lt;td&gt;This class ir responsible for Sync, Android OS will call onPerformSync method, we need to write our sync code in onPerformSync method.&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;6&lt;/td&gt;
    &lt;td&gt;SimpleSyncAdapterService.java&lt;/td&gt;
    &lt;td&gt;This will provide object of SimpleSyncAdapter to the sync framework&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;7&lt;/td&gt;
    &lt;td&gt;SyncConstants.java&lt;/td&gt;
    &lt;td&gt;This will hold all required constants&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;8&lt;/td&gt;
    &lt;td&gt;SyncUtil.java&lt;/td&gt;
    &lt;td&gt;This will have common methods &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;9&lt;/td&gt;
    &lt;td&gt;authenticator.xml&lt;/td&gt;
    &lt;td&gt;Meta information of Authentication&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;10&lt;/td&gt;
    &lt;td&gt;sync_adapter.xml&lt;/td&gt;
    &lt;td&gt;Meta information of Sync Adapter&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please update Parse.com API key before execute sample&lt;/p&gt;

&lt;h3 id=&quot;https://github.com/kpbird/simplesyncadapter&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/kpbird/SimpleSyncAdapter&quot;&gt;https://github.com/kpbird/SimpleSyncAdapter&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/sync-adapters/creating-sync-adapter.html&quot;&gt;http://developer.android.com/training/sync-adapters/creating-sync-adapter.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://udinic.wordpress.com/2013/07/24/write-your-own-android-sync-adapter/&quot;&gt;http://udinic.wordpress.com/2013/07/24/write-your-own-android-sync-adapter/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://chariotsolutions.com/blog/post/android-data-sync/&quot;&gt;http://chariotsolutions.com/blog/post/android-data-sync/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5onKZcJyJwI&quot;&gt;https://www.youtube.com/watch?v=5onKZcJyJwI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>How Smart Watch can change your life</title>
   <link href="http://www.romuluscrisan.com/2014/12/How-Smart-Watch-can-change-your-life%20copy"/>
   <updated>2014-12-04T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/12/How-Smart-Watch-can-change-your-life copy</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/05be48e.jpg&quot; alt=&quot;Smart Watch&quot; title=&quot;Smart Watch&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;_&amp;quot;A smartwatch (or smart watch) is a computerized wristwatch with functionality that is enhanced beyond timekeeping, and is often comparable to a personal digital assistant (PDA) device&amp;quot; - _Wikipedia&lt;/p&gt;

&lt;p&gt;Avi Greengart, a consumer device analyst, predicted that 2013 may be &amp;quot;the year of Smart watch&amp;quot;. This prediction turned out to be true as majority of smart phone manufacturer are focusing on smart watch and wearable. Many of them have already released smart watch and others have near future release plans. It is forecasted that 350 million smart watches will ship by 2020&lt;a href=&quot;https://media.licdn.com/mpr/mpr/shrinknp_500_500/p/4/005/09f/13c/35409df.png&quot;&gt;1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.licdn.com/mpr/mpr/shrinknp_500_500/p/4/005/09f/13c/35409df.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Smart watch shipments 2013-2020 (in millions)&lt;/p&gt;

&lt;p&gt;There are numerous day-to-day use cases that can be made simple yet secure with usage of smart watch. Let&amp;#39;s have quick look, how smart watch can make your life easy.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as ID card:&lt;/strong&gt; Do you forget to carry ID card every morning? NFC based smart watch can work as your ID card. Enterprise can do away with hassle of issuing separate ID card to employees having smart watch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as Wallet:&lt;/strong&gt; Do you feel your wallet is bulky with credit cards and other useless stuff? Smart watch can replace your need to carry credit cards. Smart Watch and &amp;quot;Card on File&amp;quot; concept can replace need of carrying plastic card in your wallet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as Health monitor:&lt;/strong&gt; Are you a health geek? Or having health issue which requires continuous monitoring? A smart watch with sensors like Heart Rate, Body Temperature, Accelerometer, etc., will collect your health data and upload to cloud for 24x7 care.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as Remote control&lt;/strong&gt;: Are you confused with different remotes for different systems like home garage door, television, Set Top Box etc.? Smart Watch with Bluetooth can work as remote for your garage, television etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as Security Token:&lt;/strong&gt; Do you need to carry RSA Token to access highly secure software or physical location (like Server Room). Smart watch can work as RSA token, it can generate software RSA key. Or it can add 3rd factor of authentication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as SOS Device:&lt;/strong&gt; Smart watch knows when you could be in danger and sends for help. Smart watch contains a gyroscope and an accelerometer, that detect physical activity or aggressive movements, and mobile app send SMS and email to configured emergency contacts with your current location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Watch as Notification/Reminder Device:&lt;/strong&gt; This is prime feature of smart watch as of now. It will display different notification from smart phone and allow quick action. With smart watch you will never miss important things like breaking news, flight alerts, meeting calls, reminders, weather alerts.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Smart Watch will change our life in many ways. It can become your identity for office access, wallet for payment, car door keys and much more…Vision is smart watch will replace your need of carrying disparate accessibility tokens including a smart phone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.forbes.com/sites/michaelwolf/2013/09/27/smartwatch-market-forecast-to-reach-15-million-in-2014/&quot;&gt;http://www.forbes.com/sites/michaelwolf/2013/09/27/smartwatch-market-forecast-to-reach-15-million-in-2014/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Wearable technology to monitor Parkinson’s disease</title>
   <link href="http://www.romuluscrisan.com/2014/12/Wearable-technology-to-monitor-Parkinson%E2%80%99s-disease"/>
   <updated>2014-12-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/12/Wearable-technology-to-monitor-Parkinson’s-disease</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/3504283.jpg&quot; alt=&quot;Wearable technology to monitor Parkinson’s disease&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Parkinson&amp;#39;s disease is a degenerative disorder of central nervous system. It&amp;#39;s more common in older people after the age of 60. It is sometime call idiopathic because it has not external identifiable cause. The early symptoms of disease are shaking, difficulty with walking, rigidity, bradykinesia (slowness of movements), postural instability, freezing and loss a sense of smell. In later stage when disease increase, patient may have behavior and thinking issues. According to the National Parkinson’s Foundation survey in 2010 [1], nearly 1 million people in the U.S. are living with Parkinson’s disease, with between 50,000 and 60,000 new cases diagnosed each year. Medication costs for an individual person with Parkinson&amp;#39;s disease average $2,500 a year [2].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is not biological markers to diagnose Parkinson’s disease. Researchers are working hard to identify the cause of disease.&lt;/p&gt;

&lt;p&gt;The physicians are use following techniques for diagnosis.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The doctor tries to observe if patient’s expression is animated.&lt;/li&gt;
&lt;li&gt;Patient’s arms are observed for tremor, which is present either when they are at rest, or extended.&lt;/li&gt;
&lt;li&gt;Is there stiffness in patient’s limbs or neck?&lt;/li&gt;
&lt;li&gt;Can patient rise from a chair easily?&lt;/li&gt;
&lt;li&gt;Do patient walk normally or with short steps, and symmetrically swing their arms? The doctor will pull patient backwards.&lt;/li&gt;
&lt;li&gt;How quickly can patient regain his/her balance?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Above techniques are traditional and subjective, the result may vary as per doctor&amp;#39;s observation. These techniques have not changed since Dr. James Parkinson suggested before 200 years (1817). There is no cure for Parkinson’s, but the drug levadopa and other medications can control symptoms for years together. In addition to above techniques physician suggest a patient to undergo PET Scan, CT Scan and MRI to check other effects on body. Accurate and objective diagnosis is primary challenge for physician.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The primary symptoms of Parkinson&amp;#39;s disease is Moto symptoms - Shaking or tremor and walking difficulty. Latest technical innovation in sensors and wearable has potential to transform current practice of observing &amp;amp; capturing effect of Moto symptoms on patients. With the wearable device monitoring, symptoms can be measured objectively. For instance, a patient might inform the doctor that he felt tremor for several minutes, whereas actual duration would have been few seconds. With these wearable device doctors can get precise measurements about the &amp;quot;frequency and severity&amp;quot; of symptoms.&lt;/p&gt;

&lt;p&gt;There are multifold benefits of using wearable to monitor patients.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Automatically capture data without any effort made by patient.
Real-time analysis.&lt;/li&gt;
&lt;li&gt;Data will be store in cloud to provide accessibility anywhere, anytime.&lt;/li&gt;
&lt;li&gt;Doctors can diagnosis multiple patient at a same time with cloud based system.&lt;/li&gt;
&lt;li&gt;Patient need not visit doctor for routine observation.&lt;/li&gt;
&lt;li&gt;Data will be helpful for research.&lt;/li&gt;
&lt;li&gt;Data will be used to monitor effect of new drug.&lt;/li&gt;
&lt;li&gt;Data will be used for progression of disease and behavior pattern.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wearable has potential to revolutionize diagnosis technique for Parkinson&amp;#39;s disease. Using wearable technology, researchers can actually monitor and measurable Moto symptoms. It will help to find new drugs, can save thousands of dollars and most importantly researchers will find cause and treatment of Parkinson&amp;#39;s disease to save patient&amp;#39;s life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.webmd.com/parkinsons-disease/news/20101004/parkinsons-later-diagnosis-earlier-death&quot;&gt;http://www.webmd.com/parkinsons-disease/news/20101004/parkinsons-later-diagnosis-earlier-death&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;http://www.pdf.org/en/parkinson_statistics&quot;&gt;http://www.pdf.org/en/parkinson_statistics&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Monolithic vs MicroService Architecture</title>
   <link href="http://www.romuluscrisan.com/2014/11/Monolithic-vs-MicroService-Architecture"/>
   <updated>2014-11-28T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/11/Monolithic-vs-MicroService-Architecture</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/007ac2e.png&quot; alt=&quot;Monolithic vs MicroService Architecture&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Monolithic architecture is something that build from single piece of material, historically from rock. Monolith term normally use for object made from single large piece of material.”&lt;/em&gt; - &lt;strong&gt;Non-Technical Definition&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Monolithic application has single code base with multiple modules. Modules are divided as either for business features or technical features. It has single build system which build entire application and/or dependency. It also has single executable or deployable binary”&lt;/em&gt; – &lt;strong&gt;Technical Definition&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Industry is using this approach since long to develop enterprise application. Many companies have invested years to build enterprise application with monolithic approach. Sometime it also called multi-tier architecture because monolithic applications are divided in three or more layers or tire i.e. presentation, business, database, application, etc. It was a time of browser evaluation. Enterprise was focused on desktop/laptop devices with Web Browser as client, which doesn&amp;#39;t require to expose data with API, mainly because browsers can understand only HTML, CSS and JavaScript. Although, Enterprise was using Enterprise Data Bus(EDB), Electronic Data Interchange(EDI) , Enterprise Data Exchange (EDX) and many more (&lt;a href=&quot;http://www.oasis-open.org/standards&quot;&gt;https://www.oasis-open.org/standards&lt;/a&gt;) data exchange format to interact with each other in back-end. Monolithic architecture need of enterprises&amp;#39; at that time.&lt;/p&gt;

&lt;p&gt;Suddenly, entire paradigm shift from browser / desktop to mobile / smart devices. Enterprise need to serve data to different devices and form factors (smart phone, tablet, handheld, etc). Smart phone become always available, always on and personal device for everyone, which demand information anytime, anywhere, on fingertip. Mobile application is nearly useless without internet connectivity and backend services. Now is a time for mobile first, every enterprises are looking forward to develop mobile application before web. To developer mobile application enterprise need to expose data using API (REST or SOAP) because legacy data exchange format was not compatible with mobile application. With increasing demand of mobile application force to change back-end architecture. This is prime force behind migrating monolithic architecture to microservice architecture.&lt;/p&gt;

&lt;p&gt;Microservice architecture is an approach of building large enterprise application with multiple small unit called service, each service develop, deploy and test individually. Each service intercommunicate with a common communication protocol like REST web service with JSON. Each service run individually either in single machine or different machine but they execute its own separate process. Each service may have own database or storage system or they can share common database or storage system. Microservice is all about distribute or break application in small chunks.&lt;/p&gt;

&lt;p&gt;Microservice is more than code and structure. It’s way of working. Its culture in a way, every developer or team own some part of large application. Microservice is not ultimate solution for every application but it’s surely solution for large enterprise application. Microservice has some shortfalls like increase lot of operations overhead, DevOps skills required, complex to manage because of distributed system, bug tracking become challenging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Difficulties with monolithic application, when it grow&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large monolithic code base makes complicated to understand, especially for new developer&lt;/li&gt;
&lt;li&gt;Scaling become challenging&lt;/li&gt;
&lt;li&gt;Continuously integration / deployment become complex and time consuming. You may require dedicated team for build and deploy&lt;/li&gt;
&lt;li&gt;Overloaded IDE, Large code base makes IDE slow, build time increase.&lt;/li&gt;
&lt;li&gt;Extremely difficult to change technology or language or framework because everything is tightly coupled and depend up on each other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Privilege with Microservice architecture, when it grow&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each microservice is small and focused on a specific feature / business requirement.&lt;/li&gt;
&lt;li&gt;Microservice can be developed independently by small team of developers (normally 2 to 5 developers).&lt;/li&gt;
&lt;li&gt;Microservice is loosely coupled, means services are independent, in terms of development and deployment both.&lt;/li&gt;
&lt;li&gt;Microservice can be developed using different programming language (Personally I don&amp;#39;t suggest to do it).&lt;/li&gt;
&lt;li&gt;Microservice allows easy and flexible way to integrate automatic deployment with Continuous Integration tools (for e.g: Jenkins, Hudson, bamboo etc..).
The productivity of a new team member will be quick enough.&lt;/li&gt;
&lt;li&gt;Microservice allows you to take advantage of emerging and latest technologies (framework, programming language, programming practice, etc.).&lt;/li&gt;
&lt;li&gt;Microservice is easy to scale based on demand.
In a nutshell, monolithic vs microservice architecture is like elephant vs ant approach. What you wants to build a giant system like elephant or army of ant, small, fast and effective.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;People to follow&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Martin Fowler &lt;a href=&quot;http://twitter.com/@martinfowler&quot;&gt;@martinfowler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Victor Klang &lt;a href=&quot;http://twitter.com/@viktorklang&quot;&gt;@viktorklang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jeppe Cramon &lt;a href=&quot;http://twitter.com/@jeppec&quot;&gt;@jeppec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Benjamin Wootton &lt;a href=&quot;http://twitter.com/@benjaminwootton&quot;&gt;@benjaminwootton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Russ Miles &lt;a href=&quot;http://twitter.com/@russmiles&quot;&gt;@russmiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Article &amp;amp; Presentation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/articles/microservices.html&quot;&gt;http://martinfowler.com/articles/microservices.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yow.eventer.com/yow-2012-1012/micro-services-architecture-by-fred-george-1286&quot;&gt;http://yow.eventer.com/yow-2012-1012/micro-services-architecture-by-fred-george-1286&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/presentations/Breaking-the-Monolith&quot;&gt;http://www.infoq.com/presentations/Breaking-the-Monolith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linkedin.com/today/post/article/20140529022253-6461201-seven-micro-%0Aservices-architecture-advantages&quot;&gt;https://www.linkedin.com/today/post/article/20140529022253-6461201-seven-micro-
services-architecture-advantages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Case Studies&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build Microservices at Krma &lt;a href=&quot;http://blog.yourkarma.com/building-microservices-at-karma&quot;&gt;https://blog.yourkarma.com/building-microservices-at-karma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Migrating to Microservice &lt;a href=&quot;http://www.infoq.com/presentations/migration-cloud-native&quot;&gt;http://www.infoq.com/presentations/migration-cloud-native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;µCon: The Microservices Conference : &lt;a href=&quot;http://killsmatter.com/conferences/6312-mucon&quot;&gt;https://skillsmatter.com/conferences/6312-mucon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Login with Facebook</title>
   <link href="http://www.romuluscrisan.com/2014/11/android-login-with-facebook"/>
   <updated>2014-11-22T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/11/android-login-with-facebook</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-iCx0todkMGM/VHBoCFbte1I/AAAAAAAAFQk/kwWnGCSH0zM/s400/device-2014-11-22-154940.png&quot; alt=&quot;&quot;&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-4i7paQCAuI8/VHBoBI8q9OI/AAAAAAAAFQY/4iYGAbS4ncw/s400/device-2014-11-22-155020.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-K9IoL8Kubeo/VHBoAuZ00qI/AAAAAAAAFQU/JV4_06ckPGM/s400/Screen%2BShot%2B2014-11-22%2Bat%2B3.50.35%2Bpm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-requisite&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2. Facebook API Key from Facebook Application - &lt;a href=&quot;https://developers.facebook.com/docs/android/getting-started&quot;&gt;Detail&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3. Hash Key of your debug certificate &amp;nbsp;- &lt;a href=&quot;http://sonyarouje.com/2011/09/18/facebook-hash-key-for-android-apps/&quot;&gt;Detail&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Step 1: Import &amp;quot;FacebookLoginUtils.java&amp;quot; class in your package&lt;/p&gt;

&lt;p&gt;Step 2: Implement callback listener&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; public class MyActivity extends Activity implements FacebookLoginUtils.FacebookLoginStatus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Step 3: Declare callback method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    @Override
    public void OnSuccessFacebookLogin(Bundle profile) {
        Log.i(TAG,profile.getString(FacebookLoginUtils.USERID));
        Log.i(TAG,profile.getString(FacebookLoginUtils.EMAIL));
        Log.i(TAG,profile.getString(FacebookLoginUtils.NAME));
        Log.i(TAG,profile.getString(FacebookLoginUtils.FIRST_NAME));
        Log.i(TAG,profile.getString(FacebookLoginUtils.LAST_NAME));

    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Step 4: Declare object of FacebookLoginUtils.java&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    private FacebookLoginUtils fLogin;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Step 5: Initialize object in onCreate method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;        fLogin = new FacebookLoginUtils(this, R.id.activity_login_fb);
        fLogin.setLoginStatus(this);
        fLogin.setEnable(true);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Step 6: Declare few supporting methods&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    protected void onResume() {
        super.onResume();
        fLogin.onResume();
    };

    @Override
    protected void onPause() {
        super.onPause();
        fLogin.onPause();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        fLogin.onDestroy();
    }

    @Override
    protected void onActivityResult(int requestCode, int responseCode,Intent intent) {
        fLogin.onActivityResult(requestCode, responseCode, intent);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Q: What is the problem of above approach ?&lt;/p&gt;

&lt;p&gt;A: You activity has a lot of scattered code for Facebook login, It will be more complex and unmanageable when you will have another social network login like Facebook and Twitter.&lt;/p&gt;

&lt;p&gt;Q: How I will receive a response for login success?&lt;/p&gt;

&lt;p&gt;A: You need to implement interface &amp;quot;FacebookLoginStatus&amp;quot;, on successful login you will receive callback &amp;quot;OnSuccessFacebookLogin&amp;quot;&lt;/p&gt;

&lt;p&gt;Q: What will be received on login success ?&lt;/p&gt;

&lt;p&gt;A: You will have Name, Email , First Name, Last Name, User Id.&lt;/p&gt;

&lt;p&gt;Q: Do I need to handle login failure / error ?&lt;/p&gt;

&lt;p&gt;A: No, FacebookLoginUtils.java will handle login failure, error and display appropriate message on screen. &amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: Change facebook app key in /res/values/strings.xml#facebook&lt;/em&gt;app_id_&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Login with Google Plus Utility</title>
   <link href="http://www.romuluscrisan.com/2014/11/android-login-with-google-plus-utility"/>
   <updated>2014-11-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/11/android-login-with-google-plus-utility</id>
   <content type="html">&lt;h1 id=&quot;android-login-with-google-plus-utility&quot;&gt;Android Login with Google Plus Utility&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-SxTNj0uRwW8/VGSvrKm53mI/AAAAAAAAFPo/izmq8IUVyY4/s320/device-2014-11-13-161116.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-requisite&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Official Document: &lt;a href=&quot;https://developers.google.com/+/mobile/android/sign-in&quot;&gt;https://developers.google.com/+/mobile/android/sign-in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tutorial from AndroidHive : &lt;a href=&quot;http://www.androidhive.info/2014/02/android-login-with-google-plus-account-1/&quot;&gt;http://www.androidhive.info/2014/02/android-login-with-google-plus-account-1/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please read AndroidHive article for initial setup &amp;amp; other process&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Import &amp;quot;GooglePlusLoginUtils.java&amp;quot; class in your package&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Implement callback listener&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public class LoginActivity extends Activity implements GooglePlusLoginUtils.GPlusLoginStatus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Declare callback method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    public void OnSuccessGPlusLogin(Bundle profile) {
 Log.i(TAG,profile.getString(GooglePlusLoginUtils.NAME));
 Log.i(TAG,profile.getString(GooglePlusLoginUtils.EMAIL));
 Log.i(TAG,profile.getString(GooglePlusLoginUtils.PHOTO));
 Log.i(TAG,profile.getString(GooglePlusLoginUtils.PROFILE));
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Declare object of GooglePlusLoginUtils.java&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private GooglePlusLoginUtils gLogin;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Initialize object in onCreate method&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; gLogin = new GooglePlusLoginUtils(this, R.id.activity_login_gplus); // Id of login button
        gLogin.setLoginStatus(this);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Declare few supporting methods&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; @Override
 protected void onStart() {
         super.onStart();
         gLogin.connect();
 }
 @Override
 protected void onStop() {
         super.onStop();
         gLogin.disconnect();
 }
 @Override
 protected void onActivityResult(int requestCode, int responseCode,Intent intent) {
                gLogin.onActivityResult(requestCode, responseCode, intent);
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Q: What is the problem of above approach ?&lt;/p&gt;

&lt;p&gt;A: You activity has a lot of scattered code for Google Pluse login, It will be more complex and unmanageable when you will have another social network login like Facebook and Twitter.&lt;/p&gt;

&lt;p&gt;Q: How I will receive a response for login success?&lt;/p&gt;

&lt;p&gt;A: You need to implement interface &amp;quot;GPlusloginStatus&amp;quot;, on successful login you will receive callback &amp;quot;OnSuccessGPlusLogin&amp;quot;&lt;/p&gt;

&lt;p&gt;Q: What will be received on login success ?&lt;/p&gt;

&lt;p&gt;A: You will have Display name, Email , Photo and Profile url.&lt;/p&gt;

&lt;p&gt;Q: Do I need to handle login failure / error ?&lt;/p&gt;

&lt;p&gt;A: No, GooglePlusLoginUtils.java will handle login failure, error and display appropriate message on screen. &amp;nbsp;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android 5.0 Lollipop API Change</title>
   <link href="http://www.romuluscrisan.com/2014/10/android-50-lollipop-api-change"/>
   <updated>2014-10-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/10/android-50-lollipop-api-change</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/lollipop-1600.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;src:&amp;nbsp;&lt;a href=&quot;http://www.android.com/new/images/banners/lollipop-1600.png&quot;&gt;http://www.android.com/new/images/banners/lollipop-1600.png&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android 5.0 Lollipop Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Material design&lt;/li&gt;
&lt;li&gt;Performance focus&lt;/li&gt;
&lt;li&gt;Notifications&lt;/li&gt;
&lt;li&gt;Your apps on the big screen - TV&lt;/li&gt;
&lt;li&gt;Document-centric apps&lt;/li&gt;
&lt;li&gt;Advanced connectivity&lt;/li&gt;
&lt;li&gt;High-performance graphics&lt;/li&gt;
&lt;li&gt;More Powerful Audio&lt;/li&gt;
&lt;li&gt;Enhanced Camera &amp;amp; Video&lt;/li&gt;
&lt;li&gt;Screen capturing and sharing&lt;/li&gt;
&lt;li&gt;New types of sensors&lt;/li&gt;
&lt;li&gt;Chromium WebView&lt;/li&gt;
&lt;li&gt;Accessibility &amp;amp; Input&lt;/li&gt;
&lt;li&gt;Tools for building battery-efficient apps&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Additions&lt;/th&gt;
&lt;th&gt;Changes&lt;/th&gt;
&lt;th&gt;Removals&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Packages&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Classes and Interfaces&lt;/td&gt;
&lt;td&gt;147&lt;/td&gt;
&lt;td&gt;360&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;507&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Constructors&lt;/td&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Methods&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;916&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fields&lt;/td&gt;
&lt;td&gt;1150&lt;/td&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1227&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;2179&lt;/td&gt;
&lt;td&gt;612&lt;/td&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;2824&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The overall difference between &lt;strong&gt;API Levels 20 and 21&lt;/strong&gt; is approximately &lt;strong&gt;6.51%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android L Preview API Changes&lt;/strong&gt;  &lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Additions&lt;/th&gt;
&lt;th&gt;Changes&lt;/th&gt;
&lt;th&gt;Removals&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Packages&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Classes and Interfaces&lt;/td&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;td&gt;232&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;319&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Constructors&lt;/td&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Methods&lt;/td&gt;
&lt;td&gt;408&lt;/td&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;494&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fields&lt;/td&gt;
&lt;td&gt;754&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;777&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;1341&lt;/td&gt;
&lt;td&gt;368&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;1727&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The overall difference between&amp;nbsp;&lt;strong&gt;API Levels 20&lt;/strong&gt;&amp;nbsp;and L-preview is approximately&amp;nbsp;&lt;strong&gt;3.77%.&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>10 Tips for fledgling developers</title>
   <link href="http://www.romuluscrisan.com/2014/07/10-Tips-for-fledgling-developers"/>
   <updated>2014-07-12T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/07/10-Tips-for-fledgling-developers</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/22783b7.jpg&quot; alt=&quot;10 Tips for fledgling developers&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Continues Study&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Never think that you have acquired all or most of the knowledge existing in the world. Almost everybody in India at age of 24 starts thinking that he has acquired all the wisdom and knowledge that he needs. This should be strictly avoided. Continue study after education. Study should be habituated exactly in the same way as you are brushing teeth and taking bath every morning. A regular study, everyday, is extremely essential. Study not only computer science but also other subject in which you are interested. It does not matter whether you study for 10 minutes or 1 hour, but consistency is a must. You should always study basics and fundamentals. There is no point in going for advance topics, you can always go back and re-read or re-iterate over the fundamental concepts. There are plenty of things in computer science that you can study (like operating system, compiler, languages, networking, databases, algorithms, architecture, etc..)&lt;/p&gt;

&lt;p&gt;For computer science I suggest to read following books&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structure and Interpretation of Computer Programs by Albenson and Sussman.&lt;/li&gt;
&lt;li&gt;Introduction to Computer Architecture by Hennessy and Patterson.&lt;/li&gt;
&lt;li&gt;Fundamentals of Programming by Donald Knuth.&lt;/li&gt;
&lt;li&gt;Introduction to Algorithms by Cormen, Leiserson and Rivest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Learn Professional Ethics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As computer science professional, you are morally obliged to do a good job. What this means is that you are supposed to do your job not for your manager or company or client but for yourself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;“Doing duties of your life” - Bhagwatgeeta&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The direct implication of this is: never ever write a bad code. You don’t need to be the fastest and run after deadline rather you need to write quality code. Never write junk code. Rewrite it till you are satisfied with the quality. Remember that you are writing code not only for compiler but for humans also, your code must be easy to unstandable by other developers. Writing good code is an art and aesthetic beauty build in it. You should feel uneasy at writing bad code. To judge quality of code, you should compare with good and popular open source library written in the same language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Read a lot of code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Read a lot of quality code written by excellent programmers. Not just good programmers, like the best guy in your circle, but those who have delivered on international scale. It’s very easy because you have access to the huge amount of open source codebase today. You can either refer github or code.google.com, this is easy and helpful for you. When I was learning Java, I read code from the Tomcat project and JDK source code. I&amp;#39;ve read lots of good code ever since and I still refer to it. Read the code. Look at the comments, see what the authors are doing, and how they went about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Learn your tools thoroughly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think the loss of programming time is not in debugging or rewriting code, but in the innumerable seconds lost here and there by developers who don&amp;#39;t really know their tools. I am referring to: the IDE, the language, the build system, the SVN, etc.. the IDE and the language are by far the most important. Remember maximum shortcut keys of IDE, memorize most useful methods and classes of language. for the language I suggest to read API documents. Keep the API documentation handy while developing. Sometimes, it may happen that functionality which you are trying to develop is readily available in API or there should be some class which will help in saving your efforts to a great extent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Academic is not like the real world&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your percentage largely doesn’t matter. What matters is your practical experience you earn by solving real world problems. To the extent that it does matter to meet minimum criteria for interview process. It only determines whether your resume gets selected for job interviews. Academic is just startup, subject that you learn in college is just an introduction for language or concept, there are lot in depth things and concept you need to study for real world development. There are only three things which will help you to crack the interview - Knowledge, Knowledge and Knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Don&amp;#39;t focus on job security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s normal human behavior, everyone wants stable and secure job in large company but The thing is though, those large companies usually aren&amp;#39;t a very satisfying place to work. Things take a long time to get done, and the bureaucracy alone is enough to drain you mentally after a few years. our skills are outdated faster if you don’t upgrade your self with new tools and technologies. Usually large companies don’t allow that freedom to you. At that point, you&amp;#39;re pretty much stuck at a crappy job. If you want long-term job security, the best way to achieve that is to just make sure that you&amp;#39;re very good at what you do, and that you love doing it. If you have knowledge and experience, you will find job in market even if market is not booming. Make sure that you enjoy your job, If not then don’t be afraid to leave.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Build your portfolio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your portfolio means your public presence, create account in stackoverflow and help other people, create your blog and share your knowledge and experience. create account in github and make your side project / library open source. Attend meet-up, conference or technical event in your city or nearby. Take part in technical discussion. Read technical blogs written by others and write your thought in comment section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Working with Humans&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The unexpected part is that it’s the human aspect (mostly not the technical ones) that trump everything – unless it’s a one person project for yourself :-). You need to communicate with your team members and work within their personalities, strengths, and weaknesses. And, human craziness can destroy even the most technically brilliant project. Making non-technical people understand technical insights has been a bit difficult in my experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Figure out your Goals&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Always aspire doing bigger things in life. Viewing promotion path as your career goal is completely wrong concept. If you are really interested to study and learn new things. Never aspire of being manager but aspire of being excellent programmer / developer. Normally in Indian software company you will be promoted as some kind of managerial role after 6 or 7 years of experience. You might feel that you want to do certain things which you cannot do till you become a manager. When you become a manager, you will soon realize that now you just cannot do anything that you thought of. The three biggest mistakes that people usually make are aiming for money, aiming for promotion and aiming for fame. The moment you get some of these, you aspire for some more and then there is no end. I do not mean that you should not earn money, but you should understand how much money would satisfy your needs. Bill Clinton might be the richest person in the world; he is certainly not the happiest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Follow your culture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have seen the tradition that whatever junk is created in US, it rapidly spreads up in India and specially in our industry. This cultural change creates a very strong impact on everybody’s life. To act and behave like pseudo US/UK/etc. citizen is stupid thing, but believe me, there is nothing great in that. This all just makes you run away from your culture. And there is no wisdom in running away from your culture. Indian culture, which has great Vedas and stories like Mahabharata and Bhagwatgeeta is really great. You should understand that fundamental things in Indian culture teach you a lot and you should never forget them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, I would like to conclude by saying that it’s your life...don&amp;#39;t waste it on stupid things...develop your tests, and start the fight.&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Microservice Architecture - A Quick Guide</title>
   <link href="http://www.romuluscrisan.com/2014/06/Microservice-Architecture-A-Quick-Guide"/>
   <updated>2014-06-20T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/06/Microservice-Architecture-A-Quick-Guide</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/25c6a49.jpg&quot; alt=&quot;Microservice Architecture - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. What is Architecture (Software)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Architecture is the fundamental organization of a system embodied in its components (i.e. Web Server, Application Server, Databases,Storage, Communication layer, etc...), their relationships to each other, and to the environment (i.e. deployment environment shared server, dedicated server, cloud deployment, etc..), and the principles guiding its design and evolution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. What is microservice architecture ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Microservice means developing a single, small, meaningful functional feature as single service, each service has it’s own process and communicate with lightweight mechanism, deployed in single or multiple servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Advantages of microservice architecture ?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Each micro service is small and focused on a specific feature / business requirement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice can be developed independently by small team of developers (normally 2 to 5 developers).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice is loosely coupled, means services are independent, in terms of development and deployment both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice can be developed using different programming language (Personally I don&amp;#39;t suggest to do it).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice allows easy and flexible way to integrate automatic deployment with Continuous Integration tools (for e.g: Jenkins, Hudson, bamboo etc..).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The productivity of a new team member will be quick enough.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice is easy to understand, modify and maintain for a developer because separation of code,small team and focused work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice allows you to take advantage of emerging and latest technologies (framework, programming language , programming practice, etc.).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice has code for business logic only, No mixup with HTML,CSS or other UI component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice is easy to scale based on demand.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservice can deploy on commodity hardware or low / medium configuration servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy to integrate 3rd party service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every microservice has it&amp;#39;s own storage capability but it depends on the project’s requirement, you can have common database like MySQL or Oracle for all services.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Disadvantages of microservice architecture ?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Microservice architecture brings a lot of operations overhead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DevOps Skill required (&lt;a href=&quot;http://en.wikipedia.org/wiki/DevOps&quot;&gt;http://en.wikipedia.org/wiki/DevOps&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Duplication of Effort.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Distributed System is complicated to manage .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Default to trace problem because of distributed deployment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complicated to manage whole products when number of services increases.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. In which case / requirement microservice architecture best fit ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you need to support Desktop, web , mobile, Smart TVs, Wearable, etc... or you don&amp;#39;t know in future which kind of devices you need to support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Which products / companies are using Microservie architecture?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most large scale web sites including Twitter, Netflix, Amazon and eBay have evolved from a monolithic architecture to a microservices architecture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. How independent micro services communicate with each other?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s depend upon requirement, normally developers use HTTP/REST with JSON or Protobuf (Binary protocol) but are free to use any communication protocol.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Why is it that everyone are talking about microservices now?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s been nearly 15 years since the concept of Service Oriented Architecture really took hold. With the improvement of RESTful web service and JSON as a data interchange format has made it easier than ever to build easily interconnectable services simply and quickly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Presentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/presentations/Micro-Services&quot;&gt;http://www.infoq.com/presentations/Micro-Services&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Video&lt;/strong&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2rKEveL55TY&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;11. Picture: Monolithic vs Modular vs Service oriented architecture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/0d60cc3.jpg&quot; alt=&quot;Microservice Architecture - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>NoSQL - A Quick Guide</title>
   <link href="http://www.romuluscrisan.com/2014/06/NoSQL-A-Quick-Guide"/>
   <updated>2014-06-14T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/06/NoSQL-A-Quick-Guide</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/07e4e1f.jpg&quot; alt=&quot;NoSQL - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;NoSQL is buzz word now-a-days among the developers and software professionals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. What is NoSQL?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NoSQL database, also called Not Only SQL, is an approach to data management and database design that&amp;#39;s useful for very large sets of distributed data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Where to use NoSQL ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use NOSQL, When project has unstructured big data that require real-time or offline analysis or web/mobile application. i.e. Social Network app, Analytics app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Advantages and Disadvantages of NoSQL DB.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Advantages of NoSQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Elastic scaling&lt;/li&gt;
&lt;li&gt;Big Data&lt;/li&gt;
&lt;li&gt;Ecomomics&lt;/li&gt;
&lt;li&gt;Flexible data models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Disadvantages of NoSQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Maturity&lt;/li&gt;
&lt;li&gt;Support&lt;/li&gt;
&lt;li&gt;Analytics and business intelligence&lt;/li&gt;
&lt;li&gt;Administration&lt;/li&gt;
&lt;li&gt;Expertise&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Category of NoSQL&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Column&lt;/li&gt;
&lt;li&gt;Document&lt;/li&gt;
&lt;li&gt;Key-value&lt;/li&gt;
&lt;li&gt;Graph&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. How many NoSQL database are available in market?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More then 110 different (Open Source and Proprietary) NoSQL database available in market&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. If all NoSQL database fall under above category then what is purpose of having lots of NoSQL databases ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Every NOSQL database has some special feature &amp;amp; functionality which makes it different, Base on the project requirement one can choose NOSQL database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Can I use multiple NoSQL in my project / application ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. List of popular NoSQL database with usage.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Radis:&lt;/strong&gt; For rapidly changing data (should fit mostly in memory). i.e. to store real-time stock prices, analytics, leaderboards and communication. And replacement of memcached.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB:&lt;/strong&gt; When you need dynamic queries, defined indexes, map/reduce and good performance on a big DB. i.e. for most things that you would do with MySQL but having predefined columns really holds you back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cassandra:&lt;/strong&gt; When you need to store data so huge that it doesn&amp;#39;t fit on server, but still want a friendly familiar interface to it. When you don&amp;#39;t need real-time analysis or other operation. i.e. Web analytics, Transaction logging, Data collection from huge sensor arrays.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Riak:&lt;/strong&gt; If you need very good single-site scalability, availability and fault-tolerance, but you&amp;#39;re ready to pay for multi-site replication. i.e. Point-of-sales data collection. Factory control systems. Places where even seconds of downtime hurt. Could be used as a well-update-able web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CouchDB:&lt;/strong&gt; For accumulating, occasionally changing data, on which pre-defined queries are to be run. Places where versioning is important. i.e. CRM, CMS systems. Master-master replication is an especially interesting feature, allowing easy multi-site deployments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HBase:&lt;/strong&gt; Hadoop is probably still the best way to run Map/Reduce jobs on huge datasets. Best if you use the Hadoop/HDFS stack already. ie. Search engines. Analysing log data. Any place where scanning huge, two-dimensional join-less tables are a requirement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accumulo:&lt;/strong&gt; If you need to restict access on the cell level. i.e. Same as HBase, since it&amp;#39;s basically a replacement: Search engines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hypertable:&lt;/strong&gt; If you need a better HBase. i.e/ Same as HBase, since it&amp;#39;s basically a replacement: Search engines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Neo4j:&lt;/strong&gt; For graph-style, rich or complex, interconnected data. Neo4j is quite different from the others in this sense. i.e. For searching routes in social relations, public transport links, road maps, or network topologies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ElasticSearch:&lt;/strong&gt; When you have objects with (flexible) fields, and you need &amp;quot;advanced search&amp;quot; functionality. i.e. A dating service that handles age difference, geographic location, tastes and dislikes, etc. Or a leaderboard system that depends on many variables. you can replace your Solr with ElasticSearch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Couchbase:&lt;/strong&gt; Any application where low-latency data access, high concurrency support and high availability is a requirement. i.e. Low-latency use-cases like ad targeting or highly-concurrent web apps like online gaming (e.g. Zynga).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Can I have video tutorial to learn more about NoSQL?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sure, Watch following video..&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/qI_g07C_Q5I&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Reference &amp;amp; More reading...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/NoSQL&quot;&gt;http://en.wikipedia.org/wiki/NoSQL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis&quot;&gt;http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.dzone.com/mz/nosql&quot;&gt;http://www.dzone.com/mz/nosql&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nosqlweekly.com/&quot;&gt;http://www.nosqlweekly.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nosql-database.org/&quot;&gt;http://nosql-database.org/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Migrating Web Site to AWS Cloud - A Quick Guide</title>
   <link href="http://www.romuluscrisan.com/2014/06/Migrating-Web-Site-to-AWS-Cloud-A%20Quick-Guide"/>
   <updated>2014-06-05T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/06/Migrating-Web-Site-to-AWS-Cloud-A Quick-Guide</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/33c24ac.jpg&quot; alt=&quot;Migrating Web Site to AWS Cloud - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is a quick tip to migrate your existing website to AWS Cloud.I assume that you have basic knowledge of AWS Cloud and server side architecture. This post does not include a discussion of pros and cons of AWS or Cloud services. Elasticity and Auto-Scaling are two main features of Cloud. If we don&amp;#39;t leverage these feature then there isn&amp;#39;t any difference between hosting website in dedicate server or AWS Cloud. You can create EC2 instance and deploy your existing code. It will work perfect, but in this case you cannot apply auto-scale. There is no purpose of migrating web site to AWS Cloud without auto-scaling.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Cloud Service: Following list has description of essential AWS Cloud service.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. EC2 (Elastic Compute Cloud)&lt;/strong&gt; - It supports operating systems that includes numerous Linux distributions, and Microsoft Windows Server. Amazon EC2 enables you to increase or decrease capacity within minutes, not hours or day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. RDS (Relational Database Service)&lt;/strong&gt; - Amazon RDS gives you access to the capabilities of a familiar MySql, Oracle, Microsoft SQL Server, or PostgreSql database engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. S3 (Simple Storage Service)&lt;/strong&gt; - Amazon S3 provides a highly durable and available store for a variety of content, ranging from web applications to media files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. CloudFront&lt;/strong&gt; - CloudFront is content delivery network. It can be used to deliver your entire website, including dynamic, static, streaming, and interactive content using a global network of edge locations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. ELB (Elastic Load Balancer)&lt;/strong&gt; - Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Auto-Scaling&lt;/strong&gt; - Auto Scaling allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define. Mainly It&amp;#39;s based on incoming traffic or CPU utilization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Route 53 (DNS Service)&lt;/strong&gt; - Amazon Route 53 is a highly available and scalable Domain Name System (DNS)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;: Let&amp;#39;s assume two different architecture, one deployed on dedicated server and another deployed in AWS Cloud. website developed in PHP/ASP/Java with MySql as backend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dedicated Server Architecture:&lt;/strong&gt; This architecture has mainly three components load balancer, application servers and database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/3ee65b8.jpg&quot; alt=&quot;Migrating Web Site to AWS Cloud - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;AWS Cloud Architecture: This architecture has Route 53, ELB, EC2, CloudFront, S3, RDS and Auto-Scaling services used.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2d2962b.jpg&quot; alt=&quot;Migrating Web Site to AWS Cloud - A Quick Guide&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Migration Phases&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Planning&lt;/strong&gt; – It will include financial assessment (TOC/ROI), technical assessment, prototype creation or proof of concept, data migration planning and application migration planning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Execution&lt;/strong&gt; – It will have execution of planning, modification of application source code and testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Deployment&lt;/strong&gt; – It will have deploy application and data migration, AWS Cloud has various tools like AWS Elastic Beanstalk, AWS CloudFormation, AWS OpsWorks, etc.. for deployment and management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Monitor&lt;/strong&gt; – AWSCloud has AWS CloudTrail and Amazon CloudWatch services for monitor AWS resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tips for the developers:&lt;/strong&gt; Migrating to AWS Cloud require code and structure changes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Migrate MySQL database to RDS, MySql database can directly migrate (export - import) to RDS-MySql engine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As you are migrating to AWS Cloud, you have more storage options like SimpleDB and DynemoDB. You can take advantage of these storage services to off load data from MySql . It’s call hybrid approach -SQL and NOSQL&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In dedicated architecture all files, (for eg:- images, videos, etc...)are stored in web space /some folder in server. In case of AWS Cloud all files (images, videos, etc ...) should be stored on S3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In dedicated architecture, all web assets (CSS, JS, Icons, and Images) are stored in virtual directory of web server and web server or application will serve these assets, which is unnecessary on servers. In AWS Cloud, all web assets (CSS, JS, Icons, and Images) should be stored in S3 and link with CloudFront.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In dedicated architecture, your cron jobs will run on same web server. In case of AWS Cloud, you may require dedicated EC2 instance for cron jobs or you can create schedule EC2 instance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In dedicate architecture, you may have only application which serves all request. For AWS you can use two separate servers, Web Server (i.e. Apache HTTP Server, Nginx Server, etc...) and Application Server (Tomcat, IIS, etc...)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Few application services are available in AWS Cloud that you can use depending upon the requirement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon SQS – Amazon Simple Queue Service (SQS) is a fast, reliable, scalable, fully managed message queuing service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon SNS - Amazon Simple Notification Service is a fast, flexible, fully managed push messaging service. It also supports push notifications to Apple, Google, Fire OS, and Windows devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon SES - Amazon Simple Email Service is a cost-effective outbound-only email-sending service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://aws.amazon.com/whitepapers/migrating-your-existing-applications-to-the-aws-cloud-with-3-example-scenarios/&quot;&gt;http://aws.amazon.com/whitepapers/migrating-your-existing-applications-to-the-aws-cloud-with-3-example-scenarios/
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/12/21/sql-nosql-yes.html&quot;&gt;http://highscalability.com/blog/2010/12/21/sql-nosql-yes.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://aws.amazon.com/products/&quot;&gt;http://aws.amazon.com/products/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Triangle Pager Sliding Tabs</title>
   <link href="http://www.romuluscrisan.com/2014/06/android-triangle-pager-sliding-tabs"/>
   <updated>2014-06-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/06/android-triangle-pager-sliding-tabs</id>
   <content type="html">&lt;p&gt;Android Triangle Pager Sliding Tabs&lt;/p&gt;

&lt;iframe allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/2w8-wzr-wx8&quot; width=&quot;420&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&amp;gt; &lt;strong&gt;_Note&lt;/strong&gt;: This is not a plug and play library that you can directly import in project and use. Triangle tabs is extension of PagerSlidingTabStrip library. In this article I will explain, how to modify &lt;a href=&quot;https://github.com/astuetz/PagerSlidingTabStrip&quot;&gt;PageSlidingTabStrip&lt;/a&gt; library to create Triangle Tabs._&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android Triangle Tabs Video&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;**&lt;br&gt;
** &lt;strong&gt;Customise&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;PageSlidingTabStrip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Import PageSlidingTabStrip library in AndroidStudio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Let add new attribute for Triangle Tabs in attrs.xml (project -&amp;gt; res -&amp;gt; values). This attribute will allow developer to enable / disable triangle tabs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;attr name=&amp;quot;pstsTriangleIndicator&amp;quot; format=&amp;quot;boolean&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; We need to modify Java code for Triangle Tabs.Goto source code and Open PagerSlidingTabStrip.java file&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Declare boolean variable above constructor, for pstsTriangleIndicator attribute.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private boolean triangleIndicator = false;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Fatch pstsTriangleIndicator attribute, write following line in constructor&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;triangleIndicator = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsTriangleIndicator, triangleIndicator);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Now it&amp;#39;s time to draw triangle tab, goto onDraw method and add following code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Original Code&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;New Code&lt;/strong&gt;, conditional code for triangle tabs&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if (triangleIndicator) {
      Rect r = new Rect();
      int left = (int) lineLeft + (int) (((lineRight - lineLeft) / 2) - (indicatorHeight / 2)) - 20;
      int top = height - indicatorHeight;
      int right = (int) left + indicatorHeight + 30;
      int bottom = height;
      r.set(left, top, right, bottom);
      Path path = getEquilateralTriangle(r);
      canvas.drawPath(path, rectPaint);
}
else {
      canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; This is last step, declare getEquilateralTriangle() function. This function has code for triangle.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public Path getEquilateralTriangle(Rect bounds) {
        Point startPoint = null, p2 = null, p3 = null;
        int width = bounds.right - bounds.left;
        int height = bounds.bottom - bounds.top;

        startPoint = new Point(bounds.left, bounds.bottom);

        p2 = new Point(startPoint.x + width, startPoint.y);
        p3 = new Point(startPoint.x + (width / 2), startPoint.y - height);

        Path path = new Path();
        path.moveTo(startPoint.x, startPoint.y);
        path.lineTo(p2.x, p2.y);
        path.lineTo(p3.x, p3.y);

        return path;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Include the customized library as local library project or you can copy PagerSlidingTabStrip.java, attrs.xml and background_tab.xml in respective folders of your main project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Include the PagerSlidingTabStrip widget in your layout. This should usually be placed above the ViewPager it represents. Noticed pstsTriangleIndicator attribute&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;com.kpbird.triangletabs.pagerslidingtabstrip android:id=&amp;quot;@+id/activity_main_pagertabstrip&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;45dp&amp;quot; custom:pststextallcaps=&amp;quot;true&amp;quot; custom:pstsindicatorcolor=&amp;quot;#FF3F9FE0&amp;quot; custom:pstsdividercolor=&amp;quot;#FF3F9FE0&amp;quot; custom:pstsunderlinecolor=&amp;quot;#FF3F9FE0&amp;quot; custom:pststriangleindicator=&amp;quot;true&amp;quot; custom:pstsshouldexpand=&amp;quot;true&amp;quot; custom:pstsindicatorheight=&amp;quot;15dp&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; In your onCreate method (or onCreateView for a fragment), bind the widget to the ViewPager.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// Declar variable
private ViewPager pager;
private PagerSlidingTabStrip pagertab;
private MyPageAdapter pageAdapter;

// Inside onCreate
pager = (ViewPager) findViewById(R.id.activity_main_pager);
pagertab = (PagerSlidingTabStrip) findViewById(R.id.activity_main_pagertabstrip);
List fragments = getFragments();
pageAdapter = new MyPageAdapter(getSupportFragmentManager(), fragments);
pager.setAdapter(pageAdapter);
pagertab.setViewPager(pager);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Compile &amp;amp; Run application&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private boolean triangleIndicator = false;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Fatch pstsTriangleIndicator attribute, write following line in constructor&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;triangleIndicator = a.getBoolean(R.styleable.PagerSlidingTabStrip_pstsTriangleIndicator, triangleIndicator);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Now it&amp;#39;s time to draw triangle tab, goto onDraw method and add following code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Original Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
New Code, conditional code for triangle tabs&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if (triangleIndicator) {
  Rect r = new Rect();
  int left = (int) lineLeft + (int) (((lineRight - lineLeft) / 2) - (indicatorHeight / 2)) - 20;
  int top = height - indicatorHeight;
  int right = (int) left + indicatorHeight + 30;
  int bottom = height;
  r.set(left, top, right, bottom);
  Path path = getEquilateralTriangle(r);
  canvas.drawPath(path, rectPaint);
} 
else {
  canvas.drawRect(lineLeft, height - indicatorHeight, lineRight, height, rectPaint);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; This is last step, declare getEquilateralTriangle() function. This function has code for triangle.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public Path getEquilateralTriangle(Rect bounds) {
    Point startPoint = null, p2 = null, p3 = null;
    int width = bounds.right - bounds.left;
    int height = bounds.bottom - bounds.top;

    startPoint = new Point(bounds.left, bounds.bottom);

    p2 = new Point(startPoint.x + width, startPoint.y);
    p3 = new Point(startPoint.x + (width / 2), startPoint.y - height);

    Path path = new Path();
    path.moveTo(startPoint.x, startPoint.y);
    path.lineTo(p2.x, p2.y);
    path.lineTo(p3.x, p3.y);

    return path;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Include the customized library as local library project or you can copy PagerSlidingTabStrip.java, attrs.xml and background_tab.xml in respective folders of your main project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Include the PagerSlidingTabStrip widget in your layout. This should usually be placed above the ViewPager it represents. Noticed pstsTriangleIndicator attribute&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;com.kpbird.triangletabs.PagerSlidingTabStrip
    android:id=&amp;quot;@+id/activity_main_pagertabstrip&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;45dp&amp;quot;
    custom:pstsTextAllCaps=&amp;quot;true&amp;quot;
    custom:pstsIndicatorColor=&amp;quot;#FF3F9FE0&amp;quot;
    custom:pstsDividerColor=&amp;quot;#FF3F9FE0&amp;quot;
    custom:pstsUnderlineColor=&amp;quot;#FF3F9FE0&amp;quot;
    custom:pstsTriangleIndicator=&amp;quot;true&amp;quot;
    custom:pstsShouldExpand=&amp;quot;true&amp;quot;
    custom:pstsIndicatorHeight=&amp;quot;15dp&amp;quot;
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; In your onCreate method (or onCreateView for a fragment), bind the widget to the ViewPager.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// Declar variable 
private ViewPager pager;
private PagerSlidingTabStrip pagertab;
private MyPageAdapter pageAdapter;

// Inside onCreate
pager = (ViewPager) findViewById(R.id.activity_main_pager);
pagertab = (PagerSlidingTabStrip) findViewById(R.id.activity_main_pagertabstrip);
List fragments = getFragments();
pageAdapter = new MyPageAdapter(getSupportFragmentManager(), fragments);
pager.setAdapter(pageAdapter);
pagertab.setViewPager(pager);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Compile &amp;amp; Run application&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android L Preview API Changes</title>
   <link href="http://www.romuluscrisan.com/2014/06/android-l-preview-api-changes"/>
   <updated>2014-06-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/06/android-l-preview-api-changes</id>
   <content type="html">&lt;h1 id=&quot;android-l-preview-api-changes&quot;&gt;Android L Preview API Changes&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://cdn.redmondpie.com/wp-content/uploads/2014/06/Developer-Preview-Android-L.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;src:&amp;nbsp;&lt;a href=&quot;http://developer.android.com/preview/images/l-dev-prev.png&quot;&gt;http://developer.android.com/preview/images/l-dev-prev.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;**&lt;br&gt;
** &lt;strong&gt;Android L Preview Features&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A New Design - Material Design&lt;/li&gt;
&lt;li&gt;A New Runtime - ART (Android Runtime)&lt;/li&gt;
&lt;li&gt;Enhanced Notifications&lt;/li&gt;
&lt;li&gt;Project Volta- Increased Efficiency&lt;/li&gt;
&lt;li&gt;Support for OpenGL ES 3.1&lt;/li&gt;
&lt;li&gt;Android Extension Pack&lt;/li&gt;
&lt;li&gt;Camera API for advanced camera capabilities&lt;/li&gt;
&lt;li&gt;Storage - Directory selection&lt;/li&gt;
&lt;li&gt;Multiple network connections&lt;/li&gt;
&lt;li&gt;Bluetooth broadcasting&lt;/li&gt;
&lt;li&gt;NFC enhancements&lt;/li&gt;
&lt;li&gt;Scheduling jobs&lt;/li&gt;
&lt;li&gt;Enterprise - Managed provisioning&lt;/li&gt;
&lt;li&gt;Render PDF as bitmap&lt;/li&gt;
&lt;li&gt;Testing and accessibility improvements&lt;/li&gt;
&lt;li&gt;Easier switching between input languages
&lt;strong&gt;Android L Preview API Changes&lt;/strong&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Additions&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Changes&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Removals&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Packages&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Classes and Interfaces&lt;/td&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;td&gt;232&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;319&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Constructors&lt;/td&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Methods&lt;/td&gt;
&lt;td&gt;408&lt;/td&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;494&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fields&lt;/td&gt;
&lt;td&gt;754&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;777&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1341&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;368&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;18&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1727&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The overall difference between &lt;strong&gt;API Levels 20&lt;/strong&gt; and L-preview is approximately &lt;strong&gt;3.77%.&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;New Packages&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;android.app.job&lt;/li&gt;
&lt;li&gt;android.bluetooth.le&lt;/li&gt;
&lt;li&gt;android.hardware.camera2&lt;/li&gt;
&lt;li&gt;android.hardware.camera2.params&lt;/li&gt;
&lt;li&gt;android.media.session&lt;/li&gt;
&lt;li&gt;android.media.tv&lt;/li&gt;
&lt;li&gt;android.service.voice&lt;/li&gt;
&lt;li&gt;android.system&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Simple tips to secure Android app</title>
   <link href="http://www.romuluscrisan.com/2014/05/simple-tips-to-secure-android-app"/>
   <updated>2014-05-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/05/simple-tips-to-secure-android-app</id>
   <content type="html">&lt;h1 id=&quot;simple-tips-to-secure-android-app&quot;&gt;Simple tips to secure Android app&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://www.oneclickroot.com/wp-content/uploads/2012/10/Android-security.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Src: &lt;a href=&quot;http://www.oneclickroot.com/wp-content/uploads/2012/10/Android-security.jpg&quot;&gt;http://www.oneclickroot.com/wp-content/uploads/2012/10/Android-security.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Android has security features built into the operating system that significantly reduce the frequency and impact of application security issues but as application developer, its our job to secure application. The level of security is depends upon application type &amp;amp; domain. There are &amp;nbsp;few security aspects we need not forget. I am collecting those common tips in this article.&lt;/p&gt;

&lt;p&gt;Here, I list down most common things that developers should take care to protect the application.&lt;/p&gt;

&lt;p&gt;1. Do not store private or sensitive data on SDCard. To store file on internal storage, use following methods with private mode (Context.MODE_PRIVATE) &lt;a href=&quot;http://developer.android.com/reference/android/content/Context.html#openFileOutput%28java.lang.String,%20int%29&quot;&gt;openFileOutput&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://developer.android.com/reference/android/content/Context.html#openFileInput%28java.lang.String%29&quot;&gt;openFileInput&lt;/a&gt;. If you really wants to store data in sdcard then encrypt it. You will find many encryption libraries. I prefer &lt;a href=&quot;https://github.com/facebook/conceal&quot;&gt;conceal&lt;/a&gt; from facebook. &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/p&gt;

&lt;p&gt;2. Restrict ContentProvider using &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/provider-element.html#exported&quot;&gt;exported flag&lt;/a&gt; set as false. It&amp;#39;s not the case that every time we develop ContentProvider for data exchange between applications but ContentProvider can be developed for single application or private.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;provider android:exported=&amp;quot;false&amp;quot; android:name=&amp;quot;MyContentProvider&amp;quot; android:authorities=&amp;quot;com.example.mycontentprovider&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3. Restrict WebView to access local data. HTML5 and related technologies have become popular &amp;nbsp;to develop Mobile Web App app or Hybrid app. For Hybrid uses WebView to display content from locally store HTML or fetch HTML and other content from the server. &amp;nbsp;Major security concerns for WebView are &lt;a href=&quot;http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess%28boolean%29&quot;&gt;setAllowFileAccess()&lt;/a&gt; and &lt;a href=&quot;http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowContentAccess%28boolean%29&quot;&gt;setAllowContentAccess()&lt;/a&gt; methods.&lt;/p&gt;

&lt;p&gt;4. Do not pass sensitive information through Broadcast &amp;amp; Intent. Use LocalBroadcastManager for broadcast data within process / app. &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html&quot;&gt;LocalBroadcastManager&lt;/a&gt; is available in Support Library V4.&lt;/p&gt;

&lt;p&gt;5. Don&amp;#39;t print sensitive information in LogCat. Information like username, password, web service URL, request or response, etc detail.&lt;/p&gt;

&lt;p&gt;6. Remove unnecessary Log before publishing app.&lt;/p&gt;

&lt;p&gt;7. Don&amp;#39;t process malicious Intents. &amp;nbsp;Before process Intent received in onReceive method of BroadcastReceiver, validate callers package name, action and other information.&lt;/p&gt;

&lt;p&gt;8. Protect your &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/service-element.html&quot;&gt;Service&lt;/a&gt; with Permission. Use exposed flag as &amp;nbsp;false When Service is developed for your app only.&lt;/p&gt;

&lt;p&gt;9. Restrict access to Activities. If the activity is intended solely for the internal use of the app then use &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/activity-element.html#exported&quot;&gt;exported flag&lt;/a&gt; set as false.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;activity android:name=&amp;quot;.view.MyActivity&amp;quot; android:exported=&amp;quot;false&amp;quot;&amp;gt; &amp;lt;/activity&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10. &amp;nbsp;Make sure that debug mode is false before publish APK.    &lt;/p&gt;

&lt;p&gt;11. Encrypt sensitive data even if you store in internal storage.  &lt;/p&gt;

&lt;p&gt;12. For cross app functionality, validate calling application before response.   &lt;/p&gt;

&lt;p&gt;13. Properly verify server certificate TLS/SSL for HTTPS web call.  &lt;/p&gt;

&lt;p&gt;14. Use NDK whenever you feel that information is not safe in Java code because It can decompile easily. i.e. Constant.  &lt;/p&gt;

&lt;p&gt;15. Use &lt;a href=&quot;http://developer.android.com/tools/help/proguard.html&quot;&gt;ProGuard&lt;/a&gt; that shrinks, optimizes, and obfuscates your code.  &lt;/p&gt;

&lt;p&gt;16. Remove unwanted / unused &lt;user-permission&gt; from AndroidManifest.xml  &lt;/p&gt;

&lt;p&gt;17. Loading classes.dex outside of application is major security risk. &lt;a href=&quot;http://developer.android.com/reference/dalvik/system/DexClassLoader.html&quot;&gt;DexClassLoader&lt;/a&gt; allowed developer to load classes.dex on demand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/security-tips.html&quot;&gt;http://developer.android.com/training/articles/security-tips.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Use ADB over Wi-Fi without extra application or software</title>
   <link href="http://www.romuluscrisan.com/2014/03/use-adb-over-wi-fi-without-extra"/>
   <updated>2014-03-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/03/use-adb-over-wi-fi-without-extra</id>
   <content type="html">&lt;h1 id=&quot;use-adb-over-wi-fi-without-extra-application-or-software&quot;&gt;Use ADB over Wi-Fi without extra application or software&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-Wiba-cAGHCA/UyFBLX-36OI/AAAAAAAAEy0/vSyJ2jcdoto/s1600/Android-Developer2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Image Source:&amp;nbsp;&lt;a href=&quot;http://techbeasts.com/wp-content/uploads/2013/08/Android-Developer2.png&quot;&gt;http://techbeasts.com/wp-content/uploads/2013/08/Android-Developer2.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Normally developers use USB cable to connect Android device with computer for debug and other purposes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the problems with USB ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1. You can not move around with device (some app require to move around for testing)&lt;/p&gt;

&lt;p&gt;2. Cable damage&lt;/p&gt;

&lt;p&gt;3. USB socket of Android device can be damage&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is solution of above problems ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Normally &amp;nbsp;developers use ADB over USB but it is also possible to use ADB over Wi-fi. Following steps explain how to use ADB over Wifi  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Android device and computer should be connected in same network. &amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Connect Android device with USB cable to computer&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Use following command in terminal to make sure adb is running in USB mode.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb usb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;restarting in USB mode&lt;/p&gt;

&lt;p&gt;Connect to the device over USB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Execute following command in terminal to make sure adb identify/list gets connected with the device.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb devices
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Change adb mode from USB to tcpip using following command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb tcpip 5555
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;restarting in TCP mode port: 5555&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Now, adb is running over TCP/IP mode, Let&amp;#39;s find IP address of Android device. Go to Settings in Android device -&amp;gt; About -&amp;gt; Status -&amp;gt; IP address. note down the IP address of connected Android Device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Use following command to connect ADB with IP address&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb connect #.#.#.#

connected to #.#.#.#:5555
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Now adb is working over Wi-fi, You can remove USB cable from Android device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; To confirm adb is working over Wi-fi and your device is still connect. you can use following command&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb devices

#.#.#.#:5555 device
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&amp;#39;re now ready to go!, Enjoy ADB over Wi-fi.  &lt;/p&gt;

&lt;p&gt;Note: Use following command to change ADB mode to USB  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$adb usb  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Sony SmartWatch App Development 4</title>
   <link href="http://www.romuluscrisan.com/2014/01/sony-smartwatch-app-development-4"/>
   <updated>2014-01-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2014/01/sony-smartwatch-app-development-4</id>
   <content type="html">&lt;p&gt;Sony SmartWatch App Development 4&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;http://www.kpbird.com/2013/12/sony-smartwatch-app-development-3.html&quot;&gt;previous article&lt;/a&gt;, we looked at Notification API with Hello SmartWatch demo. In this article, we will focus on Control API.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-8M7znWZHNw0/UrLyBfGpvAI/AAAAAAAAEq0/dIdN06TjKC4/s400/sonysmartwatch2trio.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Control API is&amp;nbsp;responsible&amp;nbsp;for&amp;nbsp;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Extension lifecycle:&lt;/strong&gt; It allows you to start and stop extension using Intent. Extension means SmartWatch Host application.

&lt;ul&gt;
&lt;li&gt;Control.Intents.CONTROL_START_INTENT&lt;/li&gt;
&lt;li&gt;Control.Intents.CONTROL_STOP_INTENT.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Controlling the display:&lt;/strong&gt; Normally we don&amp;#39;t require to control the display. Default screen state is &amp;quot;Auto&amp;quot;, for the specific need you can change screen state by using Intent.

&lt;ul&gt;
&lt;li&gt;Control.Intents.SCREEN_STATE_OFF&lt;/li&gt;
&lt;li&gt;Control.Intents.SCREEN_STATE_AUTO&lt;/li&gt;
&lt;li&gt;Control.Intents.SCREEN_STATE_DIM&lt;/li&gt;
&lt;li&gt;Control.Intents.SCREEN_STATE_ON&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Controlling the LEDs:&lt;/strong&gt; It used to switch on /off LEDs based on notification.

&lt;ul&gt;
&lt;li&gt;Control.Intents.CONTROL_LED_INTENT&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Controlling the vibrator:&lt;/strong&gt; It allows you to vibrate SmartWatch.

&lt;ul&gt;
&lt;li&gt;Control.Intents.CONTROL_VIBRATE_INTENT&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Key event:&lt;/strong&gt; It is used to capture hardware key i.e. home, back and menu key, which is available in SmartWatch2.

&lt;ul&gt;
&lt;li&gt;Control.Intents.CONTROL_KEY_EVENT_INTENT&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Touch event:&lt;/strong&gt; It is used to capture touch events.

&lt;ul&gt;
&lt;li&gt;Control.Intents.CONTROL_TOUCH_EVENT_INTENT&lt;/li&gt;
&lt;li&gt;Control.Intents.CONTROL_SWIPE_EVENT_INTENT&lt;/li&gt;
&lt;li&gt;Control.Intents.CONTROL_OBJECT_CLICK_EVENT_INTENT&amp;nbsp;
Sony&amp;#39;s Add-on SDK version 2.0 supports ListView and GridView but this article focuses on basic controls only. For the demo I will create a simple layout with ImageView and TextView. I will animate ImageView with thread and also capture onClick event of ImageView.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Screen Shots&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-GFZGtsAMmJU/Ur0ZaooLj7I/AAAAAAAAEss/qXBfPXSCE9E/s320/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Open Accessory emulator and select SmartWatch 2&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-H8BKenCO0BU/Ur0ZakKIpgI/AAAAAAAAEsw/tyYAWqk60gY/s320/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select Control API&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-IvspiCJ_F5c/Ur0ZavdqdZI/AAAAAAAAEso/2S-sUItU_mg/s320/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select Hello SmartWatch Extension&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-h8WDiAamRME/Ur0Zbb2TB8I/AAAAAAAAEtE/Jof-1fgO9eI/s320/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Enjoy dancing android&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-o7IZv0n26x8/Ur0ZbSUHHAI/AAAAAAAAEs8/cHzKjE_ahCg/s320/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on Android will fire onClick event from host app to extension app&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-jNlPcmX9x1Y/Ur0cJCwh7hI/AAAAAAAAEtU/_s9R1uHnB-I/s320/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on menu hardware button to make menu item visible.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s extend example which was previously developed.&lt;br&gt;
&lt;strong&gt;Step 1:&lt;/strong&gt; &amp;nbsp;Create java class named &amp;quot;HelloControlSmartWatch2.java&amp;quot; and extend with&amp;nbsp;ControlExtension.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.hellosmartwatch;
import android.content.Context;
import android.location.Address;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Toast;

import com.sonyericsson.extras.liveware.aef.control.Control;
import com.sonyericsson.extras.liveware.extension.util.control.ControlExtension;
import com.sonyericsson.extras.liveware.extension.util.control.ControlObjectClickEvent;
import com.sonyericsson.extras.liveware.extension.util.control.ControlTouchEvent;
import com.sonyericsson.extras.liveware.extension.util.control.ControlView;
import com.sonyericsson.extras.liveware.extension.util.control.ControlView.OnClickListener;
import com.sonyericsson.extras.liveware.extension.util.control.ControlViewGroup;

public class HelloControlSmartWatch2 extends ControlExtension {

    private static final int ANIMATION_DELTA_MS = 500;
    private static final int MENU_ITEM_0 = 0;
    private static final int MENU_ITEM_1 = 1;
    private static final int MENU_ITEM_2 = 2;

    private boolean mIsShowingAnimation = false;
    private Animation mAnimation = null;
 private Handler mHandler;
    private ControlViewGroup mLayout = null;
    private String TAG = this.getClass().getSimpleName();
    private Bundle[] mMenuItemsText = new Bundle[3];

 public HelloControlSmartWatch2(Context context, String hostAppPackageName,Handler handler) {
  super(context, hostAppPackageName);
   if (handler == null) {
             throw new IllegalArgumentException(&amp;quot;handler == null&amp;quot;);
      }
      mHandler = handler;
      LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
      View layout = inflater.inflate(R.layout.hello_control_2, null);
      mLayout = parseLayout(layout);
      if(mLayout !=null){
       ControlView androidAnim = mLayout.findViewById(R.id.imgHelloControl);
       androidAnim.setOnClickListener(new OnClickListener() {

    @Override
    public void onClick() {
      Toast.makeText(mContext, &amp;quot;Button Clicked&amp;quot;, Toast.LENGTH_LONG).show();
      Log.i(TAG, &amp;quot;Android Button Clicked&amp;quot;);
      toggleAnimation();
    }
   });

      }

         mMenuItemsText[0] = new Bundle();
         mMenuItemsText[0].putInt(Control.Intents.EXTRA_MENU_ITEM_ID, MENU_ITEM_0);
         mMenuItemsText[0].putString(Control.Intents.EXTRA_MENU_ITEM_TEXT, &amp;quot;Item 1&amp;quot;);

         mMenuItemsText[1] = new Bundle();
         mMenuItemsText[1].putInt(Control.Intents.EXTRA_MENU_ITEM_ID, MENU_ITEM_1);
         mMenuItemsText[1].putString(Control.Intents.EXTRA_MENU_ITEM_TEXT, &amp;quot;Item 2&amp;quot;);

         mMenuItemsText[2] = new Bundle();
         mMenuItemsText[2].putInt(Control.Intents.EXTRA_MENU_ITEM_ID, MENU_ITEM_2);
         mMenuItemsText[2].putString(Control.Intents.EXTRA_MENU_ITEM_TEXT, &amp;quot;Item 3&amp;quot;);

 }

 @Override
 public void onResume() {
  super.onResume();
   showLayout(R.layout.hello_control_2, null);
   startAnimation();
 }

 @Override
 public void onPause() {
  super.onPause();
        stopAnimation();
 }

    @Override
    public void onDestroy() {
     stopAnimation();
        mHandler = null;
    };

    public static int getSupportedControlWidth(Context context) {
        return context.getResources().getDimensionPixelSize(R.dimen.smart_watch_2_control_width);
    }

    public static int getSupportedControlHeight(Context context) {
        return context.getResources().getDimensionPixelSize(R.dimen.smart_watch_2_control_height);
    }

    @Override
    public void onTouch(ControlTouchEvent event) {
     Log.i(TAG, &amp;quot;onTouch() &amp;quot; + event.getAction());
    }
    @Override
    public void onObjectClick(ControlObjectClickEvent event) {
      Log.i(TAG, &amp;quot;onObjectClick() &amp;quot; + event.getClickType());
      if (event.getLayoutReference() != -1) {
             mLayout.onClick(event.getLayoutReference());
         }
    }
    @Override
    public void onKey(int action, int keyCode, long timeStamp) {
        Log.i(TAG, &amp;quot;onKey() &amp;quot; + action + &amp;quot;t&amp;quot; + keyCode + &amp;quot;t&amp;quot; + timeStamp);
        if (action == Control.Intents.KEY_ACTION_RELEASE
                &amp;amp;amp;&amp;amp;amp; keyCode == Control.KeyCodes.KEYCODE_OPTIONS) {
           showMenu(mMenuItemsText);
        }
    }

    @Override
    public void onMenuItemSelected(int menuItem) {
        Log.d(TAG, &amp;quot;onMenuItemSelected() - menu item &amp;quot; + menuItem);
        if (menuItem == MENU_ITEM_0) {
            clearDisplay();
            mHandler.postDelayed(new Runnable() {
                @Override
                public void run() {
                    onResume();
                }
            }, 1000);
        }

    }

    private void toggleAnimation() {
        if (mIsShowingAnimation) {
            stopAnimation();
        }
        else {
            startAnimation();
        }
    }

    private void startAnimation() {
        if (!mIsShowingAnimation) {
            mIsShowingAnimation = true;
            mAnimation = new Animation();
            mAnimation.run();
        }
    }
    private void stopAnimation() {
        if (mIsShowingAnimation) {
            // Stop animation on accessory
            if (mAnimation != null) {
                mAnimation.stop();
                mHandler.removeCallbacks(mAnimation);
                mAnimation = null;
            }
            mIsShowingAnimation = false;
        }
    }

    private class Animation implements Runnable {

        private int mIndex = 1;
        private boolean mIsStopped = false;

        Animation() {
            mIndex = 1;
        }

        public void stop() {
            mIsStopped = true;
        }

        @Override
        public void run() {
            int resourceId;
            switch (mIndex) {
                case 1:
                    resourceId = R.drawable.dancing_android_0;
                    break;
                case 2:
                    resourceId = R.drawable.dancing_android_1;
                    break;

                default:
                    Log.e(TAG, &amp;quot;mIndex out of bounds: &amp;quot; + mIndex);
                    resourceId = R.drawable.dancing_android_0;
                    break;
            }
            mIndex++;
            if (mIndex &amp;amp;gt; 2) {
                mIndex = 1;
            }

            if (!mIsStopped) {
                updateAnimation(resourceId);
            }
            if (mHandler != null &amp;amp;amp;&amp;amp;amp; !mIsStopped) {
                mHandler.postDelayed(this, ANIMATION_DELTA_MS);
            }
        }
        private void updateAnimation(int resourceId) {
            sendImage(R.id.imgHelloControl, resourceId);
        }
    };
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Open HelloExtensionService.java and override &amp;quot;createExtensionControl&amp;quot; method. In this method we need to identify accessory type before creating object of HelloControlSmartWatch2 class. To identify accessory type ExtensionUtils class has method named &amp;quot;DeviceInfoHealper&amp;quot;.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Override
   public ControlExtension createControlExtension(String hostAppPackageName) {
        // First we check if the API level and screen size required for
        // SampleControlSmartWatch2 is supported
        boolean advancedFeaturesSupported = DeviceInfoHelper.isSmartWatch2ApiAndScreenDetected(this, hostAppPackageName);
        if (advancedFeaturesSupported) {
            return new HelloControlSmartWatch2(this,hostAppPackageName, new Handler());
        } else {
         return null;
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Open&amp;nbsp;HelloRegistrationInformation.java and change return value from 0 to 2 of &amp;quot;getRequiredControlApiVersion&amp;quot; method, 0 means our example doesn&amp;#39;t require Control API, 1 and 2 represent minimum version of API required. We also need to override method named &amp;quot;isDisplaySizeSupported&amp;quot; for the confirmation of Display Size.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;...
...
@Override
 public int getRequiredControlApiVersion() {
  return 2;
 }
....

@Override
    public boolean isDisplaySizeSupported(int width, int height) {
        return ((width == HelloControlSmartWatch2.getSupportedControlWidth(mContext)
                &amp;amp;amp;&amp;amp;amp; height == HelloControlSmartWatch2
                        .getSupportedControlHeight(mContext) || width == HelloControlSmartWatch2
                .getSupportedControlWidth(mContext) &amp;amp;amp;&amp;amp;amp; height == HelloControlSmartWatch2
                .getSupportedControlHeight(mContext)) );
    }
...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Finally, Open AndroidManiFest.xml and add following action in HelloExtensionReceiver. It will require to capture onClick, onTouch and onObject click event.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;...
...
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.TOUCH_EVENT&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.SWIPE_EVENT&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.OBJECT_CLICK_EVENT&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.MENU_ITEM_SELECTED&amp;quot;&amp;gt;
...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Compile &amp;amp; Execute HelloSmartWatch example  &lt;/p&gt;

&lt;h2 id=&quot;download-source-code&quot;&gt;&lt;a href=&quot;https://github.com/kpbird/Hello-SmartWatch&quot;&gt;Download Source Code&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Note: 1. Import project in eclipse 2. Make sure that you change SmartExtensionUtils and SmartExtensionAPI path from project properties.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sony SmartWatch App Development 3</title>
   <link href="http://www.romuluscrisan.com/2013/12/sony-smartwatch-app-development-3"/>
   <updated>2013-12-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2013/12/sony-smartwatch-app-development-3</id>
   <content type="html">&lt;p&gt;Sony SmartWatch App Development 3&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-8M7znWZHNw0/UrLyBfGpvAI/AAAAAAAAEq0/dIdN06TjKC4/s400/sonysmartwatch2trio.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;In previous two articles I covered development environment setup and&amp;nbsp;anatomy of SmartWatch. This article will contain deep dive into coding with simple Hello Word example.&lt;/p&gt;

&lt;p&gt;This demo will cover Notification API only. We will develop a single Android project named &amp;quot;Hello SmartWatch&amp;quot; which acts as a Host application and Extension application both. It means I will use single codebase for both things. Hello SmartWatch project has an Activity to send and clear notification to SmartWatch.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;I assume that you have already imported SmartExtensionAPI and SmartExtensionUtils libraries in workspace.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s jump to the code.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;List of Classes and purpose&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MainActivity.java:&lt;/strong&gt; It is use to generate and clear notification.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HelloExtensionReceiver.java:&lt;/strong&gt; It receives input event generated by SmartWatch and forward control to the Extension Service.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HelloExtensionService.java:&lt;/strong&gt; core logic of Host application needs to be written in ExtensionService. It is also responsible to register a host application to SmartWatch.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HelloRegistrationInformation.java:&lt;/strong&gt; It provides essential&amp;nbsp;information to register host application and API requirement.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This demo application contains only above four classes but actual application may have more classes. In above classes MainActivity acts as a Smart Extension application and rest of classes acts as a Host application.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Create new Android project in eclipse named &amp;quot;HelloSmartWatch&amp;quot;.&lt;br&gt;
&lt;strong&gt;Step 2:&lt;/strong&gt; Let&amp;#39;s create UI first. Open activity_main.xml and put two EditText box for Title and Message respectively and two buttons for Send and Clear notification respectively.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;linearlayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;match_parent&amp;quot; android:orientation=&amp;quot;vertical&amp;quot; android:paddingbottom=&amp;quot;@dimen/activity_vertical_margin&amp;quot; android:paddingleft=&amp;quot;@dimen/activity_horizontal_margin&amp;quot; android:paddingright=&amp;quot;@dimen/activity_horizontal_margin&amp;quot; android:paddingtop=&amp;quot;@dimen/activity_vertical_margin&amp;quot; tools:context=&amp;quot;.MainActivity&amp;quot;&amp;gt;

    &amp;lt;textview android:id=&amp;quot;@+id/textView1&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:gravity=&amp;quot;center_horizontal&amp;quot; android:text=&amp;quot;Send Notification&amp;quot; android:textappearance=&amp;quot;?android:attr/textAppearanceLarge&amp;quot;&amp;gt;

    &amp;lt;edittext android:id=&amp;quot;@+id/etTitle&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:ems=&amp;quot;10&amp;quot; android:hint=&amp;quot;Title&amp;quot;&amp;gt;
    &amp;lt;/edittext&amp;gt;

    &amp;lt;edittext android:id=&amp;quot;@+id/etMessage&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:ems=&amp;quot;10&amp;quot; android:hint=&amp;quot;Message&amp;quot;&amp;gt;
    &amp;lt;/edittext&amp;gt;

    &amp;lt;button android:id=&amp;quot;@+id/btnSend&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:onclick=&amp;quot;buttonClicked&amp;quot; android:text=&amp;quot;Send Notification&amp;quot;&amp;gt;

    &amp;lt;/button&amp;gt;&amp;lt;button android:id=&amp;quot;@+id/btnClearn&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:onclick=&amp;quot;buttonClicked&amp;quot; android:text=&amp;quot;Clear Notification&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Let&amp;#39;s make button alive by writing action in MainActivity.java. I am using onClick property of buttons, so I don&amp;#39;t require to find object of button and setOnClickListener. I can write code in &amp;quot;buttonClicked&amp;quot; method which is defined. When a user click on &amp;quot;Send Notification&amp;quot; button I am simply firing ExtensionService with INTENT_ACTION_ADD action and other required data and same for &amp;quot;Clear Notification&amp;quot; but with INTENT_ACTION_CLEAR action.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.hellosmartwatch;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;

public class MainActivity extends Activity {

 @Override
 protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_main);

 }

 public void buttonClicked(View v){
  if(v.getId() == R.id.btnSend){
   Intent serviceIntent = new Intent(this, HelloExtensionService.class);
         serviceIntent.setAction(HelloExtensionService.INTENT_ACTION_ADD);
         EditText etName = (EditText) findViewById(R.id.etTitle);
         EditText etMsg = (EditText) findViewById(R.id.etMessage);
         serviceIntent.putExtra(&amp;quot;name&amp;quot;, etName.getText().toString());
         serviceIntent.putExtra(&amp;quot;message&amp;quot;, etMsg.getText().toString());
         startService(serviceIntent);
  }
  else if(v.getId() == R.id.btnClearn){
   Intent serviceIntent = new Intent(this, HelloExtensionService.class);
         serviceIntent.setAction(HelloExtensionService.INTENT_ACTION_CLEAR);
         startService(serviceIntent);
  }

 }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Create HelloExtensionReceiver.java, It extends&amp;nbsp;BroadcastReceiver. It works as bridge between SmartWatch and Host application, It will receive event generated in SmartWatch and forward it to HelloExtensionService.java  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.hellosmartwatch;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class HelloExtensionReceiver  extends BroadcastReceiver{

 private String TAG = this.getClass().getSimpleName();
 @Override
 public void onReceive(Context context, Intent intent) {
    Log.i(TAG, &amp;quot;HelloExtensionReceiver onReceiver: &amp;quot; + intent.getAction());
       intent.setClass(context, HelloExtensionService.class);
       context.startService(intent);
 }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Create&amp;nbsp;HelloRegistrationInformation.java and extends with RegistrationInformation&amp;nbsp;class. As the name suggests, It will use to register host application in Smart Connect.&amp;nbsp;It has six methods that we need to override, among these four methods are used to declare required APIs&amp;nbsp;and two methods used for extension registration and source registration. You can have multiple sources in a host application.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.hellosmartwatch;

import java.util.ArrayList;
import java.util.List;

import android.content.ContentValues;
import android.content.Context;

import com.sonyericsson.extras.liveware.aef.notification.Notification;
import com.sonyericsson.extras.liveware.aef.registration.Registration;
import com.sonyericsson.extras.liveware.extension.util.ExtensionUtils;
import com.sonyericsson.extras.liveware.extension.util.registration.RegistrationInformation;

public class HelloRegistrationInformation extends RegistrationInformation{
 private Context mContext;
 public HelloRegistrationInformation(Context ctx){
   if (ctx == null) {
             throw new IllegalArgumentException(&amp;quot;context == null&amp;quot;);
         }
         mContext = ctx;
 }
 @Override
 public int getRequiredNotificationApiVersion() {
  return 1;
 }
 @Override
 public int getRequiredWidgetApiVersion() {
  return 0;
 }

 @Override
 public int getRequiredControlApiVersion() {
  return 0;
 }

 @Override
 public int getRequiredSensorApiVersion() {
  return 0;
 }

 @Override
 public ContentValues getExtensionRegistrationConfiguration() {
    String extensionIcon = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher);
        String iconHostapp = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher);
         String extensionIcon48 = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher_48);

         String configurationText = &amp;quot;Hello SmartWatch&amp;quot;;
         String extensionName = &amp;quot;Hello SmartWatch&amp;quot;;

         ContentValues values = new ContentValues();
         values.put(Registration.ExtensionColumns.CONFIGURATION_ACTIVITY,MainActivity.class.getName());
         values.put(Registration.ExtensionColumns.CONFIGURATION_TEXT, configurationText);
         values.put(Registration.ExtensionColumns.EXTENSION_ICON_URI, extensionIcon);
         values.put(Registration.ExtensionColumns.EXTENSION_48PX_ICON_URI, extensionIcon48);

         values.put(Registration.ExtensionColumns.EXTENSION_KEY,HelloExtensionService.EXTENSION_KEY);
         values.put(Registration.ExtensionColumns.HOST_APP_ICON_URI, iconHostapp);
         values.put(Registration.ExtensionColumns.NAME, extensionName);
         values.put(Registration.ExtensionColumns.NOTIFICATION_API_VERSION,getRequiredNotificationApiVersion());
         values.put(Registration.ExtensionColumns.PACKAGE_NAME, mContext.getPackageName());
         return values;
 }

 @Override
 public ContentValues[] getSourceRegistrationConfigurations() {

   ContentValues sourceValues = null;

         String iconSource1 = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher_30);
         String iconSource2 = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher_18);
         String iconBw = ExtensionUtils.getUriString(mContext,R.drawable.ic_launcher_18_bw);
         String textToSpeech = &amp;quot;Notification from Hello SmartWatch Application&amp;quot;;
         sourceValues = new ContentValues();
         sourceValues.put(Notification.SourceColumns.ENABLED, true);
         sourceValues.put(Notification.SourceColumns.ICON_URI_1, iconSource1);
         sourceValues.put(Notification.SourceColumns.ICON_URI_2, iconSource2);
         sourceValues.put(Notification.SourceColumns.ICON_URI_BLACK_WHITE, iconBw);
         sourceValues.put(Notification.SourceColumns.UPDATE_TIME, System.currentTimeMillis());
         sourceValues.put(Notification.SourceColumns.NAME, mContext.getString(R.string.app_name));
         sourceValues.put(Notification.SourceColumns.EXTENSION_SPECIFIC_ID, HelloExtensionService.EXTENSION_SPECIFIC_ID);
         sourceValues.put(Notification.SourceColumns.PACKAGE_NAME, mContext.getPackageName());
         sourceValues.put(Notification.SourceColumns.TEXT_TO_SPEECH, textToSpeech);
         sourceValues.put(Notification.SourceColumns.ACTION_1,&amp;quot;Hello&amp;quot;);
         sourceValues.put(Notification.SourceColumns.ACTION_ICON_1,ExtensionUtils.getUriString(mContext, R.drawable.ic_launcher));

  List&amp;lt;contentvalues&amp;gt; bulkValues = new ArrayList&amp;lt;contentvalues&amp;gt;();
        bulkValues.add(sourceValues);
        return bulkValues.toArray(new ContentValues[bulkValues.size()]);
 }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Create HelloExtensionService.java and extends with ExtensionService. It will contain main logic of SmartWatch host application. We need to implement two abstract methods named &amp;quot;getRegistrationInformation()&amp;quot;, which sends object of HelloRegistrationInformation class and &amp;quot;keepRunningWhenConnected()&amp;quot;,return true if you want to keep ExtensionService running as long as SmartWatch is connected with Smart Phone. For notification example we need to create two methods named &amp;quot;addData&amp;quot; and &amp;quot;clearData&amp;quot;. It will generate and clear notification in SmartWatch respectively. We also need to implement onStartCommand to interact with Service.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.hellosmartwatch;

import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.SQLException;
import android.util.Log;
import android.widget.Toast;

import com.sonyericsson.extras.liveware.aef.notification.Notification;
import com.sonyericsson.extras.liveware.aef.registration.Registration;
import com.sonyericsson.extras.liveware.extension.util.ExtensionService;
import com.sonyericsson.extras.liveware.extension.util.ExtensionUtils;
import com.sonyericsson.extras.liveware.extension.util.notification.NotificationUtil;
import com.sonyericsson.extras.liveware.extension.util.registration.DeviceInfoHelper;
import com.sonyericsson.extras.liveware.extension.util.registration.RegistrationInformation;

public class HelloExtensionService extends ExtensionService   {

 public static final String EXTENSION_SPECIFIC_ID = &amp;quot;EXTENSION_SPECIFIC_ID_HELLO_NOTIFICATION&amp;quot;;
 public static final String EXTENSION_KEY =  &amp;quot;com.kpbird.hellosmartwatch.key&amp;quot;;
 public static final String INTENT_ACTION_ADD = &amp;quot;com.kpbird.hellosmartwatch.action.add&amp;quot;;
 public static final String INTENT_ACTION_CLEAR = &amp;quot;com.kpbird.hellosmartwatch.action.clear&amp;quot;;

 private String TAG = this.getClass().getSimpleName();
 public HelloExtensionService() {
  super(EXTENSION_KEY);
  Log.i(TAG, &amp;quot;Constructor&amp;quot;);
 }

 @Override
 public void onCreate() {
  super.onCreate();
  Log.i(TAG, &amp;quot;onCreate()&amp;quot;);
 }

 @Override
 public void onDestroy() {
  super.onDestroy();
  Log.i(TAG, &amp;quot;onDestroy()&amp;quot;);
 }

 @Override
 public int onStartCommand(Intent intent, int flags, int startId) {
  int retVal = super.onStartCommand(intent, flags, startId);
  if (intent != null) {
   if (INTENT_ACTION_CLEAR.equals(intent.getAction())) {
    Log.d(TAG, &amp;quot;onStart action: INTENT_ACTION_CLEAR&amp;quot;);
    clearData(intent);
    stopSelfCheck();
   } else if (INTENT_ACTION_ADD.equals(intent.getAction())) {
    Log.d(TAG, &amp;quot;onStart action: INTENT_ACTION_ADD&amp;quot;);
    addData(intent);
    stopSelfCheck();
   }
  }

  return retVal;
 }

 @Override
 protected RegistrationInformation getRegistrationInformation() {
  return new HelloRegistrationInformation(this);
 }

 @Override
 protected boolean keepRunningWhenConnected() {
  return false;
 }

 private void clearData(Intent intent) {
   NotificationUtil.deleteAllEvents(this);
 }

 private void addData(Intent intent) {
  String name = &amp;quot;Name&amp;quot;;
  String message = &amp;quot;Message&amp;quot;;
  if (intent.getExtras().containsKey(&amp;quot;name&amp;quot;))
   name = intent.getExtras().getString(&amp;quot;name&amp;quot;);
  if (intent.getExtras().containsKey(&amp;quot;message&amp;quot;))
   message = intent.getExtras().getString(&amp;quot;message&amp;quot;);

  long time = System.currentTimeMillis();
  long sourceId = NotificationUtil.getSourceId(this,
    EXTENSION_SPECIFIC_ID);
  Log.i(TAG, &amp;quot;Source ID :&amp;quot; + sourceId);
  if (sourceId == NotificationUtil.INVALID_ID) {
   Log.e(TAG, &amp;quot;Failed to insert data&amp;quot;);
   return;
  }
  String profileImage = ExtensionUtils.getUriString(this,R.drawable.ic_launcher);

  ContentValues eventValues = new ContentValues();
  eventValues.put(Notification.EventColumns.EVENT_READ_STATUS, false);
  eventValues.put(Notification.EventColumns.DISPLAY_NAME, name);
  eventValues.put(Notification.EventColumns.MESSAGE, message);
  eventValues.put(Notification.EventColumns.PERSONAL, 1);
  eventValues.put(Notification.EventColumns.PROFILE_IMAGE_URI,profileImage);
  eventValues.put(Notification.EventColumns.PUBLISHED_TIME, time);
  eventValues.put(Notification.EventColumns.SOURCE_ID, sourceId);

  try {
   getContentResolver().insert(Notification.Event.URI, eventValues);
  } catch (IllegalArgumentException e) {
   Log.e(TAG, &amp;quot;Failed to insert event&amp;quot;, e);
  } catch (SecurityException e) {
   Log.e(TAG,
     &amp;quot;Failed to insert event, is Live Ware Manager installed?&amp;quot;,
     e);
  } catch (SQLException e) {
   Log.e(TAG, &amp;quot;Failed to insert event&amp;quot;, e);
  }
 }

 @Override
 protected void onViewEvent(Intent intent) {
  String action = intent.getStringExtra(Notification.Intents.EXTRA_ACTION);
  Log.i(TAG, &amp;quot;Action : &amp;quot; + action);
  String hostAppPackageName = intent.getStringExtra(Registration.Intents.EXTRA_AHA_PACKAGE_NAME);
  Log.i(TAG, &amp;quot;HostAppPackageName: &amp;quot; + hostAppPackageName);
  boolean advancedFeaturesSupported = DeviceInfoHelper.isSmartWatch2ApiAndScreenDetected(this, hostAppPackageName);
  Log.i(TAG, &amp;quot;Advanced Features Supported: &amp;quot; + advancedFeaturesSupported);
  int eventId = intent.getIntExtra(Notification.Intents.EXTRA_EVENT_ID,-1);
  try {
   Cursor cursor = getContentResolver().query(Notification.Event.URI,null, Notification.EventColumns._ID + &amp;quot; = &amp;quot; + eventId,null, null);
   if (cursor != null &amp;amp;amp;&amp;amp;amp; cursor.moveToFirst()) {
    String name = cursor.getString(cursor.getColumnIndex(Notification.EventColumns.DISPLAY_NAME));
    String message = cursor.getString(cursor.getColumnIndex(Notification.EventColumns.MESSAGE));
    Toast.makeText(this,&amp;quot;Notification: Name: &amp;quot; + name + &amp;quot; Message: &amp;quot; + message,Toast.LENGTH_LONG).show();
    Log.i(TAG, &amp;quot;Name: &amp;quot; + name);
    Log.i(TAG, &amp;quot;Message: &amp;quot;+ message);
   }
   cursor.close();
  } catch (Exception ex) {
   ex.printStackTrace();
  }
 }

 @Override
 public void onRegisterResult(boolean success) {
  super.onRegisterResult(success);
   Log.d(TAG, &amp;quot;onRegisterResult :&amp;quot; + success);
 }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt;&amp;nbsp;Finally we need to register HelloExtensionReceiver and HelloExtensionService in AndroidManifest.xml like following. We also need to provide user permission &amp;quot;EXTENSION_PERMISSION&amp;quot;.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;!--?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?--&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; package=&amp;quot;com.kpbird.hellosmartwatch&amp;quot; android:versioncode=&amp;quot;1&amp;quot; android:versionname=&amp;quot;1.0&amp;quot;&amp;gt;

    &amp;lt;uses-sdk android:minsdkversion=&amp;quot;16&amp;quot; android:targetsdkversion=&amp;quot;16&amp;quot;&amp;gt;
        &amp;lt;uses-permission android:name=&amp;quot;com.sonyericsson.extras.liveware.aef.EXTENSION_PERMISSION&amp;quot;&amp;gt;

    &amp;lt;application android:allowbackup=&amp;quot;true&amp;quot; android:icon=&amp;quot;@drawable/ic_launcher&amp;quot; android:label=&amp;quot;@string/app_name&amp;quot; android:theme=&amp;quot;@style/AppTheme&amp;quot;&amp;gt;
        &amp;lt;activity android:name=&amp;quot;com.kpbird.hellosmartwatch.MainActivity&amp;quot; android:label=&amp;quot;@string/app_name&amp;quot;&amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot;&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot;&amp;gt;
            &amp;lt;/category&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/intent-filter&amp;gt;
        &amp;lt;/activity&amp;gt;
         &amp;lt;service android:name=&amp;quot;.HelloExtensionService&amp;quot;&amp;gt;

        &amp;lt;receiver android:name=&amp;quot;.HelloExtensionReceiver&amp;quot; android:permission=&amp;quot;com.sonyericsson.extras.liveware.aef.HOSTAPP_PERMISSION&amp;quot;&amp;gt;
            &amp;lt;intent-filter&amp;gt;

                &amp;lt;!-- Generic extension intents. --&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.liveware.aef.registration.EXTENSION_REGISTER_REQUEST&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.liveware.aef.registration.ACCESSORY_CONNECTION&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.LOCALE_CHANGED&amp;quot;&amp;gt;

                &amp;lt;!-- Notification intents --&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.liveware.aef.notification.VIEW_EVENT_DETAIL&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.liveware.aef.notification.REFRESH_REQUEST&amp;quot;&amp;gt;

                &amp;lt;!-- Widget intents --&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.widget.START_REFRESH_IMAGE_REQUEST&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.widget.STOP_REFRESH_IMAGE_REQUEST&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.widget.ONTOUCH&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.liveware.extension.util.widget.scheduled.refresh&amp;quot;&amp;gt;

                &amp;lt;!-- Control intents --&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.START&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.STOP&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.PAUSE&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.RESUME&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.ERROR&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.KEY_EVENT&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.TOUCH_EVENT&amp;quot;&amp;gt;
                &amp;lt;action android:name=&amp;quot;com.sonyericsson.extras.aef.control.SWIPE_EVENT&amp;quot;&amp;gt;
            &amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/intent-filter&amp;gt;
        &amp;lt;/receiver&amp;gt;
    &amp;lt;/service&amp;gt;&amp;lt;/application&amp;gt;
&amp;lt;/uses-permission&amp;gt;&amp;lt;/uses-sdk&amp;gt;&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Connect your SmartPhone and run this example. It will display MainActivity. Before jumping to &amp;quot;Send Notification&amp;quot;, open Accessory Emulator and select Extension to verify that our HelloExtension is installed or not. Click on extension menu and it will display the registration details. If extension gets registered successfully then you can go back to Hello SmartWatch application and play with Send and Clear Notification functionality.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Screen Shots&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-qmkgQsMXmlk/UrQkJWhwjWI/AAAAAAAAErA/PcH8ZoKKm3A/s400/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Open Accessory emulator and select SmartWatch 2, Wait for few second if Extensions and Notification API will not enable&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-SKllSLoUvOE/UrQkKk8MXhI/AAAAAAAAErg/LmfkOywcWIs/s400/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select Extensions&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-r0k7Mq_Cd8A/UrQkKlXiEFI/AAAAAAAAErU/52L2Xo7CWUY/s400/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;You can see extension detail&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-uOI58aGJD9A/UrQkKhPaznI/AAAAAAAAErc/WRx1bn8tXng/s400/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on &amp;quot;Show Extension Settings&amp;quot; will open this screen because at time of extension registration we provide MainActivity.java as Setting screen&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-EkWxs4WopX8/UrQkLZCBaFI/AAAAAAAAEsE/aHJ3F8FbuIA/s400/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Type Notification title and message and click Send Notification&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-Cf50vYHsDy0/UrQkLmZZOOI/AAAAAAAAErs/bo4Y_7sQ788/s400/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Go back to Accessory emulator and select Notification API &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-MqMl_Pcl1R8/UrQkLqHKbRI/AAAAAAAAEr0/2NSEMVlD2hQ/s400/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select source, This will come from HelloRegistrationInformation&amp;#39;s getSourceInformation function, It will display multiple option in the list if you have register multiple sources.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-fHQ5sWfZ2Ak/UrQkMbVR_DI/AAAAAAAAEr4/zK_hM_qiqYw/s400/8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now, you can see the notification title which we just send&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-HZZzmLRFRio/UrQkMpkoAbI/AAAAAAAAEsI/O5l7z5tTG-4/s400/9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;click on menu button &amp;quot;:&amp;quot; will open action menu, you can add maximum 4 action, In our case we have implemented only one action &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-bJmib0fKsxU/UrQkJYy4NXI/AAAAAAAAErI/MO63PEXhv2A/s400/10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on action menu will call onViewEvent method in HelloExtensionService.java. You can write any action in this method. In our example we just display Toast.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-JpNw91T2wfY/UrQkJS79eJI/AAAAAAAAErE/OsFdrO03eOA/s400/11.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;When you click on &amp;quot;Clear Notification&amp;quot; from HelloActivity and come back to emulator, you will see the effect&lt;/p&gt;

&lt;h2 id=&quot;download-source-code&quot;&gt;&lt;a href=&quot;https://github.com/kpbird/Hello-SmartWatch&quot;&gt;Download Source Code&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Note: 1. Import project in eclipse 2. Make sure that you change SmartExtensionUtils and SmartExtensionAPI path from project properties.&lt;/p&gt;

&lt;p&gt;&lt;/contentvalues&gt;&lt;/contentvalues&gt;&lt;/button&gt;&lt;/textview&gt;&lt;/linearlayout&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sony SmartWatch App Development 2</title>
   <link href="http://www.romuluscrisan.com/2013/12/sony-smartwatch-app-development-2"/>
   <updated>2013-12-06T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2013/12/sony-smartwatch-app-development-2</id>
   <content type="html">&lt;p&gt;Sony SmartWatch App Development 2&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-8M7znWZHNw0/UrLyBfGpvAI/AAAAAAAAEqw/qr9tGg-jKbo/s400/sonysmartwatch2trio.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;In previous article &lt;a href=&quot;http://www.kpbird.com/2013/12/smart-watch-app-development.html&quot;&gt;&amp;quot;Sony SmartWatch App Development&amp;quot;&lt;/a&gt;, I explained basics of SmartWatch, configuration of Sony&amp;#39;s Add-On SDK, configuration of SmartWatch emulator and execute simple notification application. This article explains anatomy of SmartWatch development.  &lt;/p&gt;

&lt;p&gt;Sony&amp;#39;s Add-on SDK is unified SDK, which includes Smart Extension APIs, Small Apps API, IR Remote API and Camera Add-on API among these Smart Extension API is used for SmartWatch and Smart Wireless Handset Pro application development.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart Extension API has following subset for different purpose&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Control API:&lt;/strong&gt; It is use to render data on device, It supports Grid view, List view, menu, image rendering, touch event and key press. Older version of Control API was supporting only image rendering but current version (2.0) supports XML based layout.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notification API:&lt;/strong&gt; This can be most useful API among others. It is used to display notification in SmartWatch, which is generated in SmartPhone application. Notification API supports notification title,message, icon and colour.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Widget API:&lt;/strong&gt; It is used to render widget on device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sensor API:&lt;/strong&gt; It is used to fetch sensor data from SmartWatch. i.e. light and accelerometer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Registration &amp;amp; Capabilities API:&lt;/strong&gt;&amp;nbsp;Registration is used to specify how many API subset your application requires ? Like I want to use only Notification API or Sensor API etc.. Capabilities API is used to fetch capability of Smart accessory, here capability means sensor, widget or other functionality, which accessory may have.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SmartWatch Extension API and Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-znsr7IpUOF8/UrLOaqFIdyI/AAAAAAAAEqc/M9QN-tLN2JY/s640/Screen+Shot+2013-12-16+at+4.01.49+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Source: Sony Smart Extension API documentation  &lt;/p&gt;

&lt;p&gt;There are three thing involved in SmartWatch application development.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Host Application:&lt;/strong&gt; It handles all interaction with SmartWatch, It is installed as a part of Smart Connect (aka LiveWare). When you install host application from Google Play, you may not find it in launcher screen. It will be available in Smart Connect (LiveWare).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Connect:&lt;/strong&gt; It acts as mediator / manager / framework between Host Application and SmartWatch. SmartWatch connect with Smart Connection application using bluetooth.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smart Extension Apps:&lt;/strong&gt; It&amp;#39;s our normal Android application, which extends to work with SmartWatch. For example Facebook, SMS, Twitter, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Communication between Host Application and Smart Extension Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-YbX5HF75j_w/UrLOannrkhI/AAAAAAAAEqY/5umJNsugJPo/s640/Screen+Shot+2013-12-16+at+4.23.59+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Above figure shows, How host application communicate with smart extension application. Smart extension API works on Intent and ContentProvider. In coding sense there can be a single application or Android project which contains both Host application and Smart Extension but there isn&amp;#39;t restriction to have single codebase. You can develop two different Android Project as per your requirement. My advice is to use single codebase or single Android project because it will be easier for user,when He/She will download from Google Play and You don&amp;#39;t require to manage separate codebase.&lt;/p&gt;

&lt;p&gt;Next article will deep dive in to the code.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Smart Watch App Development</title>
   <link href="http://www.romuluscrisan.com/2013/12/smart-watch-app-development"/>
   <updated>2013-12-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2013/12/smart-watch-app-development</id>
   <content type="html">&lt;p&gt;Smart Watch App Development&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Smart Watch or Smartwatch&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&amp;quot;A smartwatch or smart watch, is a computerized wristwatch with functionality that is enhanced beyond timekeeping, and is often comparable to a personal digital assistant (PDA) device. While early models can perform basic tasks, such as calculations, translations, and game-playing, modern smartwatches are effectively wearable computers. Many smartwatches run mobile apps, while a smaller number of models run a mobile operating system and function as portable media players, offering playback of FM radio, audio, and video files to the user via a Bluetooth headset. Some smartphone models, (also called watch phones) feature full mobile phone capability, and can make or answer phone calls&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-- Wikipedia&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-8M7znWZHNw0/UrLyBfGpvAI/AAAAAAAAEq0/dIdN06TjKC4/s320/sonysmartwatch2trio.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;SmartWatch&amp;#39;s exist since 1980s but it wasn&amp;#39;t popular much because of lack in hardware/software technology and wasn&amp;#39;t supporting eco-system. Many big companies like Google, Sony, Samsung,etc. launch SmartWatch in 2013. I believe that 2014 will be the &lt;strong&gt;&amp;quot;year of the SmartWatch&amp;quot;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Popular SmartWatchs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sony SmartWatch&lt;/li&gt;
&lt;li&gt;Samsung Galaxy Gear&lt;/li&gt;
&lt;li&gt;i&amp;#39;m Watch&lt;/li&gt;
&lt;li&gt;Pebble&lt;/li&gt;
&lt;li&gt;WiMM Labs (WiMM Labs was acquired by Google in 9-Jan-2013)
&lt;strong&gt;Following SmartWatch allows to develop apps&lt;/strong&gt; In this article, I will focus on Sony SmartWatch app development. I am using iMac with OSX 10.9 for the development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JDK&lt;/li&gt;
&lt;li&gt;Android SDK&lt;/li&gt;
&lt;li&gt;Sony Add-On SDK&lt;/li&gt;
&lt;li&gt;Emulator / Android Phone
&lt;strong&gt;Setup Development Environment for Sony SmartWatch&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install JDK [Ref: &lt;a href=&quot;http://goo.gl/UUYvez&quot;&gt;http://goo.gl/UUYvez&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install Android SDK [Ref: &lt;a href=&quot;http://goo.gl/E4nRT3&quot;&gt;http://goo.gl/E4nRT3&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Download Sony Add-on SDK from this link &lt;a href=&quot;http://goo.gl/zcKlGD&quot;&gt;http://goo.gl/zcKlGD&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Extract zip file and copy &amp;quot;sony_add-on_sdk_2_1&amp;quot; into &lt;android sdk=&quot;&quot;&gt;/add-ons/&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-l2Ty30ZpGxE/UqwAP4bhCFI/AAAAAAAAEoA/94UrDCMuJNg/s320/Screen+Shot+2013-12-14+at+12.22.31+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Android SDK with Sony Add On Folder installed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setup SmartWatch Emulator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; You can use any SmartPhone or Android Emulator for SmartWatch Emulator, In my case I am using Sony Xperia P phone. You can use any Android based Smart Phone.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install Sony&amp;#39;s Smart Connect (LiveWare) Application from Google Play&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Install &amp;quot;acessory_emulator.apk&amp;quot; from &lt;android sdk=&quot;&quot;&gt;/add-ons/sony_add-on_sdk_2_1/apks&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-W7wP8TUU5Ow/UqwCWCFRkvI/AAAAAAAAEoM/Fl0Q1YUWfKE/s400/device-2013-12-14-123040.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Accessory Emulator and Smart Connect Installed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compile &amp;amp; Install Sample Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Open Eclipse&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Import SmartExtensions from &lt;Android SDK&gt;/add-ons/samples/SmartExtensions&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://4.bp.blogspot.com/-vNKfBuX36aY/UqwG5AgwZKI/AAAAAAAAEoY/9svaEkqk_4M/s1600/Screen+Shot+2013-12-14+at+12.34.49+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Right Click and Select Import&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-GGy07vR-qZQ/UqwHZ8Y_6mI/AAAAAAAAEoo/INuySn1VWIY/s1600/Screen+Shot+2013-12-14+at+12.35.03+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select &amp;quot;Sony AddOn&amp;quot; folder from Android SDK&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-mhSO62YCtGk/UqwHdbmIk-I/AAAAAAAAEow/43yRuayp1aw/s1600/Screen+Shot+2013-12-14+at+12.35.22+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select SmartExtension Projects&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-Xj6wJcCPkQw/UqwHgrAu2aI/AAAAAAAAEo4/VQXI_C2IXr8/s1600/Screen+Shot+2013-12-14+at+12.37.28+pm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;SamplePreferenceActivity app and two libraries will display as project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Eclipse will display three projects SimplePerferenceActivity,SmartExtensionAPI and SmartExtensionUtils. SimplePerferenceActivity is our main sample application, SmartExtensionAPI and SmartExtensionUtils are library which requires to develop SmartWatch application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Compile &amp;amp; Install &amp;quot;SimplePerferenceActivity&amp;quot; in your smartphone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Open &amp;quot;Accessory Emulator&amp;quot; application from smartphone. It will display dialogbox with different options. Select &amp;quot;SmartWatch&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Accessory Emulator will display different options but only Extensions and Widget API will be active.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Select Widget API, It will display Sony SmartWatch Emulator with Sample Widget application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-bhcmL0TJFLw/UqwH-MEs_KI/AAAAAAAAEpI/qQo6uf_4uXA/s1600/device-2013-12-14-123057.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Open Accessory Emulator, Select &amp;quot;SmartWatch&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://3.bp.blogspot.com/--o1X7LxlTrc/UqwH-Le3dYI/AAAAAAAAEpE/PHXkT7n5wW0/s1600/device-2013-12-14-123106.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Enable options based on application, Select &amp;quot;Widget API&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-s2uWPOOUfHY/UqwH-D-D-lI/AAAAAAAAEpA/W0-ks2OcLwE/s1600/device-2013-12-14-123115.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Sample Widget &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.sonymobile.com/knowledge-base/sony-add-on-sdk/install-the-sony-add-on-sdk/&quot;&gt;http://developer.sonymobile.com/knowledge-base/sony-add-on-sdk/install-the-sony-add-on-sdk/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.sonymobile.com/knowledge-base/sony-add-on-sdk/install-the-sony-add-on-sdk/install-detailed-instructions/&quot;&gt;http://developer.sonymobile.com/knowledge-base/sony-add-on-sdk/install-the-sony-add-on-sdk/install-detailed-instructions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.sonymobile.com/how-to-install-the-sony-add-on-sdk-manually/&quot;&gt;http://developer.sonymobile.com/how-to-install-the-sony-add-on-sdk-manually/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.sonymobile.com/knowledge-base/tutorials/android_tutorial/how-to-create-an-app-extension-for-sony-smartwatch-2/&quot;&gt;http://developer.sonymobile.com/knowledge-base/tutorials/android_tutorial/how-to-create-an-app-extension-for-sony-smartwatch-2/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Android 4.4 KitKat API Changes</title>
   <link href="http://www.romuluscrisan.com/2013/11/android-44-kitket-api-changes"/>
   <updated>2013-11-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2013/11/android-44-kitket-api-changes</id>
   <content type="html">&lt;h1 id=&quot;android-4.4-kitkat-api-changes&quot;&gt;Android 4.4 KitKat API Changes&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Android 4.4 API Level 19&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://stocklogos.com/sites/default/files/android-kitkat.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;source &lt;a href=&quot;http://stocklogos.com/sites/default/files/android-kitkat.jpg&quot;&gt;http://stocklogos.com/sites/default/files/android-kitkat.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Major Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Runs on 512 MB RAM&lt;/li&gt;
&lt;li&gt;New NFC capabilities through Host Card Emulation&lt;/li&gt;
&lt;li&gt;Printing framework&lt;/li&gt;
&lt;li&gt;Storage access framework&lt;/li&gt;
&lt;li&gt;Low-power sensors&lt;/li&gt;
&lt;li&gt;SMS provider&lt;/li&gt;
&lt;li&gt;Full-screen Immersive mode&lt;/li&gt;
&lt;li&gt;Transitions framework for animating scenes&lt;/li&gt;
&lt;li&gt;Chromium WebView&lt;/li&gt;
&lt;li&gt;Screen recording&lt;/li&gt;
&lt;li&gt;HTTP Live Streaming&lt;/li&gt;
&lt;li&gt;Audio Tunneling to DSP&lt;/li&gt;
&lt;li&gt;RenderScript Compute&lt;/li&gt;
&lt;li&gt;New Bluetooth profiles&lt;/li&gt;
&lt;li&gt;IR Blasters&lt;/li&gt;
&lt;li&gt;Security enhancements&lt;/li&gt;
&lt;li&gt;Tools for analyzing memory use&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;API Difference&lt;/strong&gt;&lt;br&gt;
The overall difference between API Levels 18 and 19 is approximately 2.63%.&lt;/p&gt;

&lt;p&gt;| ----- |
| Type | &lt;strong&gt;Additions&lt;/strong&gt; | &lt;strong&gt;Changes&lt;/strong&gt; | Removals | &lt;strong&gt;Total&lt;/strong&gt; |
| Packages | 6 | 48 | 0 | 54 |
| Classes and&amp;nbsp;&lt;em&gt;Interfaces&lt;/em&gt; | 78 | 180 | 0 | 258 |
| Constructors | 20 | 3 | 0 | 23 |
| Methods | 268 | 26 | 5 | 299 |
| Fields | 391 | 6 | 0 | 397 |
| &lt;strong&gt;Total&lt;/strong&gt; | &lt;strong&gt;763&lt;/strong&gt; | &lt;strong&gt;263&lt;/strong&gt; | &lt;strong&gt;5&lt;/strong&gt; | &lt;strong&gt;1031&lt;/strong&gt; |&lt;/p&gt;

&lt;p&gt;**&lt;br&gt;
**&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Difference Package Wise&lt;/strong&gt;  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Volley Easy fast networking for Android</title>
   <link href="http://www.romuluscrisan.com/2013/05/volley-easy-fast-networking-for-android"/>
   <updated>2013-05-01T21:50:00+05:30</updated>
   <id>http://www.romuluscrisan.com/2013/05/volley-easy-fast-networking-for-android</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/posts/volley.png&quot; alt=&quot;Smart Watch&quot; title=&quot;Smart Watch&quot; class=&quot;img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;Volley is a library that makes networking for Android apps easier and most importantly, faster. We&amp;#39;ll give an overview of how it works, common patterns that work well with it, and a walkthrough of how you can easily load thumbnail images for your ListView from the network in parallel.&lt;/p&gt;

&lt;p&gt;Volley can be powerful alternative of AsyncTask. As Android developers, we are spending lots of time to write AsyncTask for ListView and web service calls. &amp;nbsp;Recently I read&amp;nbsp;awesome&amp;nbsp;article about AsyncTask, I suggest all Android developers to read this article &lt;a href=&quot;http://bon-app-etit.blogspot.in/2013/04/the-dark-side-of-asynctask.html&quot;&gt;&amp;quot;Dark Side of AsyncTask&amp;quot;&lt;/a&gt;&amp;nbsp;by &lt;a href=&quot;http://plus.google.com/106214265123129218556&quot;&gt;+Fré Dumazy&lt;/a&gt;,&amp;nbsp;&amp;nbsp;AsyncTask is redundant in every project. I hope many developer are agree with me, Thank to Volley framework now we can reduct effort,coding and time to write AsyncTasks.  &lt;/p&gt;

&lt;p&gt;This article illustrate simple example of Volley library. VolleyTest application fetch JSON feed from Yahoo Pipe and display in ListView.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-yn52R38ZQEM/UZ8usxVEhAI/AAAAAAAAD_E/541CNRi0i4Y/s320/Screen+Shot+2013-05-24+at+2.39.03+PM.png&quot; alt=&quot;&quot;&gt;&lt;img src=&quot;http://3.bp.blogspot.com/-zRuqVKGoHys/UZ8utKYHuPI/AAAAAAAAD_I/K7WiJq4x_lc/s320/Screen+Shot+2013-05-24+at+2.39.13+PM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Download/Clone Volley library from git repo&lt;/p&gt;

&lt;p&gt;&amp;nbsp;git clone &lt;a href=&quot;https://android.googlesource.com/platform/frameworks/volley&quot;&gt;https://android.googlesource.com/platform/frameworks/volley&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Create new project in *Android Studio named &amp;quot;VolleyTest&amp;quot;&lt;/p&gt;

&lt;p&gt;*Note: This is my first project in Android Studio&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Copy Volley library source code in &amp;quot;VolleyTest&amp;quot; project, Copying source in our project is safe and easy that&amp;#39;s why I copy source of Volley in VolleyTest project.&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://2.bp.blogspot.com/-xXRUVyaxs0Q/UZ4UCR0WtEI/AAAAAAAAD-0/cJBzvVM_m0g/s640/Screen+Shot+2013-05-23+at+3.49.11+PM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Add Internet permission in AndroidManifest.xml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;!--?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?--&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; package=&amp;quot;com.kpbird.volleytest&amp;quot; android:versioncode=&amp;quot;1&amp;quot; android:versionname=&amp;quot;1.0&amp;quot;&amp;gt;

    &amp;lt;uses-sdk android:minsdkversion=&amp;quot;9&amp;quot; android:targetsdkversion=&amp;quot;14&amp;quot;&amp;gt;

    &amp;lt;application android:allowbackup=&amp;quot;true&amp;quot; android:icon=&amp;quot;@drawable/ic_launcher&amp;quot; android:label=&amp;quot;@string/app_name&amp;quot; android:theme=&amp;quot;@style/AppTheme&amp;quot;&amp;gt;
        &amp;lt;activity android:name=&amp;quot;com.kpbird.volleytest.MainActivity&amp;quot; android:label=&amp;quot;@string/app_name&amp;quot;&amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot;&amp;gt;

                &amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot;&amp;gt;
            &amp;lt;/category&amp;gt;&amp;lt;/action&amp;gt;&amp;lt;/intent-filter&amp;gt;
        &amp;lt;/activity&amp;gt;

    &amp;lt;/application&amp;gt;
    &amp;lt;uses-permission android:name=&amp;quot;android.permission.INTERNET&amp;quot;&amp;gt;&amp;lt;/uses-permission&amp;gt;
&amp;lt;/uses-sdk&amp;gt;&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 5: Add ListView in activity_main.xml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;relativelayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;match_parent&amp;quot; android:paddingleft=&amp;quot;@dimen/activity_horizontal_margin&amp;quot; android:paddingright=&amp;quot;@dimen/activity_horizontal_margin&amp;quot; android:paddingtop=&amp;quot;@dimen/activity_vertical_margin&amp;quot; android:paddingbottom=&amp;quot;@dimen/activity_vertical_margin&amp;quot; tools:context=&amp;quot;.MainActivity&amp;quot;&amp;gt;

    &amp;lt;listview android:layout_width=&amp;quot;wrap_content&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:id=&amp;quot;@+id/listView&amp;quot; android:layout_alignparenttop=&amp;quot;true&amp;quot; android:layout_alignparentleft=&amp;quot;true&amp;quot;&amp;gt;
&amp;lt;/listview&amp;gt;&amp;lt;/relativelayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Step 6: Create new xml for List row named &amp;quot;row_listview.xml&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;!--?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?--&amp;gt;

&amp;lt;linearlayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; android:orientation=&amp;quot;vertical&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;100dp&amp;quot;&amp;gt;

    &amp;lt;textview android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:textappearance=&amp;quot;?android:attr/textAppearanceLarge&amp;quot; android:text=&amp;quot;Large Text&amp;quot; android:id=&amp;quot;@+id/txtTitle&amp;quot; android:layout_gravity=&amp;quot;left|center_vertical&amp;quot;&amp;gt;
    &amp;lt;textview android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:textappearance=&amp;quot;?android:attr/textAppearanceMedium&amp;quot; android:text=&amp;quot;Medium Text&amp;quot; android:id=&amp;quot;@+id/txtDesc&amp;quot; android:layout_gravity=&amp;quot;left|center_vertical&amp;quot; android:textcolor=&amp;quot;#929292&amp;quot; android:minlines=&amp;quot;2&amp;quot; android:ellipsize=&amp;quot;end&amp;quot; android:maxlines=&amp;quot;2&amp;quot;&amp;gt;
    &amp;lt;textview android:layout_width=&amp;quot;fill_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:textappearance=&amp;quot;?android:attr/textAppearanceSmall&amp;quot; android:text=&amp;quot;Small Text&amp;quot; android:id=&amp;quot;@+id/txtDate&amp;quot; android:layout_gravity=&amp;quot;left|center_vertical&amp;quot; android:textcolor=&amp;quot;#d6d6d6&amp;quot;&amp;gt;
&amp;lt;/textview&amp;gt;&amp;lt;/textview&amp;gt;&amp;lt;/textview&amp;gt;&amp;lt;/linearlayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;**&lt;br&gt;
** &lt;strong&gt;Step 7: Add Following code in MainActivity.java file&lt;/strong&gt;&lt;br&gt;
There are three steps to make web call using Volley&lt;/p&gt;

&lt;p&gt;1. Create new Queue Request object from Volley class  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private RequestQueue mRequestQueue;
.
.
.
mRequestQueue =  Volley.newRequestQueue(this);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2. Create object of JsonObjectRequest and provide all details like url, http method, listeners for success and error&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;JsonObjectRequest jr = new JsonObjectRequest(Request.Method.GET,url,null,new Response.Listener&amp;lt;jsonobject&amp;gt;() {
            @Override
            public void onResponse(JSONObject response) {
                Log.i(TAG,response.toString());
                parseJSON(response);
                va.notifyDataSetChanged();
                pd.dismiss();
;            }
        },new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Log.i(TAG,error.getMessage());
            }
        });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3. Add JsonObjectRequest to RequestQueue&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Following code has regular Adapter, Model class. I took everything in one java file for simplicity,&amp;nbsp;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Complete Source Code&lt;/strong&gt;&lt;br&gt;
**&lt;br&gt;
**&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.kpbird.volleytest;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.app.Activity;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.TextView;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;
import org.json.JSONArray;
import org.json.JSONObject;

import java.util.ArrayList;

public class MainActivity extends Activity {

private String TAG = this.getClass().getSimpleName();
private ListView lstView;
private RequestQueue mRequestQueue;
private ArrayList&amp;lt;NewsModel&amp;gt; arrNews ;
private LayoutInflater lf;
private VolleyAdapter va;
private ProgressDialog pd;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    lf = LayoutInflater.from(this);


    arrNews = new ArrayList&amp;lt;NewsModel&amp;gt;();
    va = new VolleyAdapter();

    lstView = (ListView) findViewById(R.id.listView);
    lstView.setAdapter(va);
    mRequestQueue =  Volley.newRequestQueue(this);
    String url = &amp;quot;http://pipes.yahooapis.com/pipes/pipe.run?_id=giWz8Vc33BG6rQEQo_NLYQ&amp;amp;_render=json&amp;quot;;
    pd = ProgressDialog.show(this,&amp;quot;Please Wait...&amp;quot;,&amp;quot;Please Wait...&amp;quot;);
    try{
        Thread.sleep(2000);
    }catch(Exception e){

        }
    JsonObjectRequest jr = new JsonObjectRequest(Request.Method.GET,url,null,new Response.Listener&amp;lt;JSONObject&amp;gt;() {
        @Override
        public void onResponse(JSONObject response) {
            Log.i(TAG,response.toString());
            parseJSON(response);
            va.notifyDataSetChanged();
            pd.dismiss();
;            }
    },new Response.ErrorListener() {
        @Override
        public void onErrorResponse(VolleyError error) {
            Log.i(TAG,error.getMessage());
        }
    });
    mRequestQueue.add(jr);



}

private void parseJSON(JSONObject json){
    try{
        JSONObject value = json.getJSONObject(&amp;quot;value&amp;quot;);
        JSONArray items = value.getJSONArray(&amp;quot;items&amp;quot;);
        for(int i=0;i&amp;lt;items.length();i++){

                JSONObject item = items.getJSONObject(i);
                NewsModel nm = new NewsModel();
                nm.setTitle(item.optString(&amp;quot;title&amp;quot;));
                nm.setDescription(item.optString(&amp;quot;description&amp;quot;));
                nm.setLink(item.optString(&amp;quot;link&amp;quot;));
                nm.setPubDate(item.optString(&amp;quot;pubDate&amp;quot;));
                arrNews.add(nm);
        }
    }
    catch(Exception e){
        e.printStackTrace();
    }


}


class NewsModel{
    private String title;
    private String link;
    private String description;
    private String pubDate;

    void setTitle(String title) {
        this.title = title;
    }

    void setLink(String link) {
        this.link = link;
    }

    void setDescription(String description) {
        this.description = description;
    }

    void setPubDate(String pubDate) {
        this.pubDate = pubDate;
    }

    String getLink() {
        return link;
    }

    String getDescription() {
        return description;
    }

    String getPubDate() {
        return pubDate;
    }

    String getTitle() {

        return title;
    }
}


class VolleyAdapter extends BaseAdapter{

    @Override
    public int getCount() {
        return arrNews.size();
    }

    @Override
    public Object getItem(int i) {
        return arrNews.get(i);
    }

    @Override
    public long getItemId(int i) {
        return 0;
    }

    @Override
    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder vh ;
       if(view == null){
           vh = new ViewHolder();
           view = lf.inflate(R.layout.row_listview,null);
           vh.tvTitle = (TextView) view.findViewById(R.id.txtTitle);
           vh.tvDesc = (TextView) view.findViewById(R.id.txtDesc);
           vh.tvDate = (TextView) view.findViewById(R.id.txtDate);
           view.setTag(vh);
      }
        else{
           vh = (ViewHolder) view.getTag();
       }

        NewsModel nm = arrNews.get(i);
        vh.tvTitle.setText(nm.getTitle());
        vh.tvDesc.setText(nm.getDescription());
        vh.tvDate.setText(nm.getPubDate());
        return view;
    }

     class  ViewHolder{
        TextView tvTitle;
         TextView tvDesc;
         TextView tvDate;

    }

}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/items.length();i++){&gt;&lt;/jsonobject&gt;&lt;/newsmodel&gt;&lt;/newsmodel&gt;&lt;/jsonobject&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>